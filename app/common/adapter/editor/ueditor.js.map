{"version":3,"sources":["../../../../src/common/adapter/editor/ueditor.js"],"names":[],"mappings":"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","file":"ueditor.js","sourcesContent":["'use strict';\r\n/**\r\n * base adapter\r\n */\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport http from 'http';\r\nexport default class extends think.adapter.base {\r\n  /**\r\n   * init\r\n   * @return {[]}         []\r\n   */\r\n  init(fileField, config, type, http) {\r\n    type = type || \"upload\";\r\n    //super.init(http);\r\n    this.http = http;\r\n    this.fileField = fileField;\r\n    this.config = config;\r\n    this.type = type;\r\n    if (type == \"remote\") {\r\n      //await this.saveRemote();\r\n    } else if (type == \"base64\") {\r\n      this.upBase64();\r\n    } else {\r\n      this.upFile();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 上传文件的主处理方法\r\n   * @return mixed\r\n   */\r\n  upFile() {\r\n    let http = this.http;\r\n    let file = http.file(this.fileField);\r\n    //console.log(file);\r\n    if (!think.isFile(file.path)) {\r\n      this.stateInfo = \"找不到临时文件\";\r\n      return;\r\n    }\r\n\r\n    this.oriName = file.originalFilename;\r\n    this.fileSize = file.size;\r\n    this.fileType = this.getFileExt();\r\n    this.fullName = this.getFullName();\r\n    this.filePath = this.getFilePath();\r\n    this.fileName = this.getFileName();\r\n    think.mkdir(this.filePath.replace(this.fileName, \"\"));\r\n    //检查文件大小是否超出限制\r\n    if (!this.checkSize()) {\r\n      this.stateInfo = \"文件大小超出网站限制\";\r\n      return;\r\n    }\r\n    //检查是否不允许的文件格式\r\n    if (!this.checkType()) {\r\n      this.stateInfo = \"文件类型不允许\";\r\n      return;\r\n    }\r\n    //移动文件\r\n    fs.renameSync(file.path, this.filePath);\r\n    if (think.isFile(this.filePath)) {\r\n      this.stateInfo = \"SUCCESS\";\r\n    } else {\r\n      this.stateInfo = '文件保存时出错';\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 处理base64编码的图片上传\r\n   * @return mixed\r\n   */\r\n  upBase64() {\r\n    let http = this.http;\r\n    let base64Data = http.post(this.fileField);\r\n    let img = new Buffer(base64Data, 'base64');\r\n    //console.log(img.length);\r\n    this.oriName = this.config['oriName'];\r\n    //console.log(this.oriName);\r\n    this.fileSize = img.length;\r\n    this.fileType = this.getFileExt();\r\n    this.fullName = this.getFullName();\r\n    this.filePath = this.getFilePath();\r\n    this.fileName = this.getFileName();\r\n    think.mkdir(this.filePath.replace(this.fileName, \"\"));\r\n\r\n    //检查文件大小是否超出限制\r\n    //if (!this.checkSize()) {\r\n    //  this.stateInfo = \"文件大小超出网站限制\";\r\n    //  return;\r\n    //}\r\n    ////检查是否不允许的文件格式\r\n    //if (!this.checkType()) {\r\n    //  this.stateInfo = \"文件类型不允许\";\r\n    //  return;\r\n    //}\r\n    //移动文件\r\n    //fs.renameSync(img, this.filePath);\r\n    fs.writeFileSync(this.filePath, img);\r\n    if (think.isFile(this.filePath)) {\r\n      this.stateInfo = \"SUCCESS\";\r\n    } else {\r\n      this.stateInfo = '文件保存时出错';\r\n    }\r\n\r\n  }\r\n\r\n  spiderImage(imgUrl, filePath) {\r\n    let deferred = think.defer();\r\n    http.get(imgUrl, function (res) {\r\n      var imgData = \"\";\r\n      res.setEncoding(\"binary\");\r\n      res.on(\"data\", function (chunk) {\r\n        imgData += chunk;\r\n      });\r\n\r\n      res.on(\"end\", function () {\r\n        fs.writeFileSync(filePath, imgData, \"binary\");\r\n        deferred.resolve(filePath);\r\n      });\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  /**\r\n   * 拉取远程图片\r\n   * @return mixed\r\n   */\r\n  async saveRemote() {\r\n    think.log(\"dddddd\")\r\n    let imgUrl = this.fileField;\r\n    //imgUrl = imgUrl.replace(/&amp;/,\"&\");\r\n    //http开头验证\r\n    if (imgUrl.indexOf(\"http\") !== 0) {\r\n      this.stateInfo = \"链接不是http链接\";\r\n      return;\r\n    }\r\n    //TODO 各种验证后面弄\r\n    let m = imgUrl.match(/[\\/]([^\\/]*)[\\.]?[^\\.\\/]*$/)[1];\r\n    this.oriName = m ? m : \"\";\r\n    //console.log(this.oriName);\r\n    this.fileSize = imgUrl.length;//TODO 这里有问题，后面弄\r\n    this.fileType = this.getFileExt();\r\n    this.fullName = this.getFullName();\r\n    this.filePath = this.getFilePath();\r\n    this.fileName = this.getFileName();\r\n    let filePath = this.filePath;\r\n    let fullName = this.fullName;\r\n    think.mkdir(this.filePath.replace(this.fileName, \"\"));\r\n    let promises = await this.spiderImage(imgUrl, filePath);\r\n    // console.log(promises);\r\n    if (think.isFile(promises)) {\r\n      this.stateInfo = \"SUCCESS\";\r\n    } else {\r\n      this.stateInfo = '文件保存时出错';\r\n    }\r\n    return {\r\n      \"state\": this.stateInfo,\r\n      \"url\": this.fullName,\r\n      \"title\": this.fileName,\r\n      \"original\": this.oriName,\r\n      \"type\": this.fileType,\r\n      \"size\": this.fileSize\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取文件扩展名\r\n   * @return string\r\n   */\r\n  getFileExt() {\r\n\r\n    return this.oriName.substr(this.oriName.lastIndexOf(\".\")).toLocaleLowerCase();\r\n  }\r\n\r\n  /**\r\n   * 重命名文件\r\n   * @return string\r\n   */\r\n  getFullName() {\r\n    //替换目录日期事件\r\n    ///ueditor/php/upload/image/{yyyy}{mm}{dd}/{time}{rand:6}\r\n    //var filename= this.filed;\r\n    var format = this.config.pathFormat;\r\n    var d = new Date();\r\n    var t = d.getTime();\r\n    var date = {};\r\n    date.yyyy = d.getFullYear();\r\n    date.mm = (d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : d.getMonth() + 1;\r\n    date.dd = (d.getDate() < 10 ? \"0\" : \"\") + d.getDate();\r\n    format = format.replace(\"{yyyy}\", date.yyyy);\r\n    format = format.replace(\"{mm}\", date.mm);\r\n    format = format.replace(\"{dd}\", date.dd);\r\n    format = format.replace(\"{time}\", t);\r\n    //计算随机数\r\n    var str = format.match(/\\{rand\\:[\\d]*\\}/i)\r\n    var index = str[0].search(/:/) + 1;\r\n    index = str[0].charAt(index);\r\n    var rand = Math.random();\r\n    rand = rand.toString();\r\n    rand = rand.substr(2, index);\r\n    //替换随机数\r\n    format = format.replace(str[0], rand);\r\n    var ext = this.getFileExt();\r\n    return format + ext;\r\n  }\r\n\r\n  /**\r\n   * 获取文件完整路径\r\n   * @return string\r\n   */\r\n  getFilePath() {\r\n\r\n    if (this.fullName.substr(0, 1) != '/') {\r\n      this.fullName = '/' + this.fullName;\r\n    }\r\n\r\n    return think.UPLOAD_PATH + this.fullName;\r\n  }\r\n\r\n  /**\r\n   * 获取文件名\r\n   * @return string\r\n   */\r\n  getFileName() {\r\n    return path.basename(this.filePath);\r\n  }\r\n\r\n  /**\r\n   * 文件类型检测\r\n   * @return boolean\r\n   */\r\n  checkType() {\r\n    return this.config[\"allowFiles\"].includes(this.getFileExt());\r\n  }\r\n\r\n  /**\r\n   * 文件大小检测\r\n   * @return boolean\r\n   */\r\n  checkSize() {\r\n    return this.fileSize <= (this.config[\"maxSize\"]);\r\n  }\r\n\r\n  /**\r\n   * 获取当前上传成功文件的各项信息\r\n   * @return object\r\n   */\r\n  getFileInfo() {\r\n    return {\r\n      \"state\": this.stateInfo,\r\n      \"url\": this.fullName,\r\n      \"title\": this.fileName,\r\n      \"original\": this.oriName,\r\n      \"type\": this.fileType,\r\n      \"size\": this.fileSize\r\n    };\r\n  }\r\n}"]}