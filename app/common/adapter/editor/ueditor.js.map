{"version":3,"sources":["../../../../src/common/adapter/editor/ueditor.js"],"names":["init","fileField","config","type","http","upBase64","upFile","file","think","isFile","path","stateInfo","oriName","originalFilename","fileSize","size","fileType","getFileExt","fullName","getFullName","filePath","getFilePath","fileName","getFileName","mkdir","replace","checkSize","checkType","renameSync","base64Data","post","img","Buffer","length","writeFileSync","spiderImage","imgUrl","deferred","defer","get","res","imgData","setEncoding","on","chunk","resolve","promise","saveRemote","log","indexOf","m","match","promises","substr","lastIndexOf","toLocaleLowerCase","format","pathFormat","d","Date","t","getTime","date","yyyy","getFullYear","mm","getMonth","dd","getDate","str","index","search","charAt","rand","Math","random","toString","ext","UPLOAD_PATH","basename","includes","getFileInfo","adapter","base"],"mappings":"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","file":"ueditor.js","sourcesContent":["'use strict';\r\n/**\r\n * base adapter\r\n */\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport http from 'http';\r\nexport default class extends think.adapter.base {\r\n  /**\r\n   * init\r\n   * @return {[]}         []\r\n   */\r\n  init(fileField, config, type, http) {\r\n    type = type || \"upload\";\r\n    //super.init(http);\r\n    this.http = http;\r\n    this.fileField = fileField;\r\n    this.config = config;\r\n    this.type = type;\r\n    if (type == \"remote\") {\r\n      //await this.saveRemote();\r\n    } else if (type == \"base64\") {\r\n      this.upBase64();\r\n    } else {\r\n      this.upFile();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 上传文件的主处理方法\r\n   * @return mixed\r\n   */\r\n  upFile() {\r\n    let http = this.http;\r\n    let file = http.file(this.fileField);\r\n    //console.log(file);\r\n    if (!think.isFile(file.path)) {\r\n      this.stateInfo = \"找不到临时文件\";\r\n      return;\r\n    }\r\n\r\n    this.oriName = file.originalFilename;\r\n    this.fileSize = file.size;\r\n    this.fileType = this.getFileExt();\r\n    this.fullName = this.getFullName();\r\n    this.filePath = this.getFilePath();\r\n    this.fileName = this.getFileName();\r\n    think.mkdir(this.filePath.replace(this.fileName, \"\"));\r\n    //检查文件大小是否超出限制\r\n    if (!this.checkSize()) {\r\n      this.stateInfo = \"文件大小超出网站限制\";\r\n      return;\r\n    }\r\n    //检查是否不允许的文件格式\r\n    if (!this.checkType()) {\r\n      this.stateInfo = \"文件类型不允许\";\r\n      return;\r\n    }\r\n    //移动文件\r\n    fs.renameSync(file.path, this.filePath);\r\n    if (think.isFile(this.filePath)) {\r\n      this.stateInfo = \"SUCCESS\";\r\n    } else {\r\n      this.stateInfo = '文件保存时出错';\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 处理base64编码的图片上传\r\n   * @return mixed\r\n   */\r\n  upBase64() {\r\n    let http = this.http;\r\n    let base64Data = http.post(this.fileField);\r\n    let img = new Buffer(base64Data, 'base64');\r\n    //console.log(img.length);\r\n    this.oriName = this.config['oriName'];\r\n    //console.log(this.oriName);\r\n    this.fileSize = img.length;\r\n    this.fileType = this.getFileExt();\r\n    this.fullName = this.getFullName();\r\n    this.filePath = this.getFilePath();\r\n    this.fileName = this.getFileName();\r\n    think.mkdir(this.filePath.replace(this.fileName, \"\"));\r\n\r\n    //检查文件大小是否超出限制\r\n    //if (!this.checkSize()) {\r\n    //  this.stateInfo = \"文件大小超出网站限制\";\r\n    //  return;\r\n    //}\r\n    ////检查是否不允许的文件格式\r\n    //if (!this.checkType()) {\r\n    //  this.stateInfo = \"文件类型不允许\";\r\n    //  return;\r\n    //}\r\n    //移动文件\r\n    //fs.renameSync(img, this.filePath);\r\n    fs.writeFileSync(this.filePath, img);\r\n    if (think.isFile(this.filePath)) {\r\n      this.stateInfo = \"SUCCESS\";\r\n    } else {\r\n      this.stateInfo = '文件保存时出错';\r\n    }\r\n\r\n  }\r\n\r\n  spiderImage(imgUrl, filePath) {\r\n    let deferred = think.defer();\r\n    http.get(imgUrl, function (res) {\r\n      var imgData = \"\";\r\n      res.setEncoding(\"binary\");\r\n      res.on(\"data\", function (chunk) {\r\n        imgData += chunk;\r\n      });\r\n\r\n      res.on(\"end\", function () {\r\n        fs.writeFileSync(filePath, imgData, \"binary\");\r\n        deferred.resolve(filePath);\r\n      });\r\n    });\r\n    return deferred.promise;\r\n  }\r\n\r\n  /**\r\n   * 拉取远程图片\r\n   * @return mixed\r\n   */\r\n  async saveRemote() {\r\n    think.log(\"dddddd\")\r\n    let imgUrl = this.fileField;\r\n    //imgUrl = imgUrl.replace(/&amp;/,\"&\");\r\n    //http开头验证\r\n    if (imgUrl.indexOf(\"http\") !== 0) {\r\n      this.stateInfo = \"链接不是http链接\";\r\n      return;\r\n    }\r\n    //TODO 各种验证后面弄\r\n    let m = imgUrl.match(/[\\/]([^\\/]*)[\\.]?[^\\.\\/]*$/)[1];\r\n    this.oriName = m ? m : \"\";\r\n    //console.log(this.oriName);\r\n    this.fileSize = imgUrl.length;//TODO 这里有问题，后面弄\r\n    this.fileType = this.getFileExt();\r\n    this.fullName = this.getFullName();\r\n    this.filePath = this.getFilePath();\r\n    this.fileName = this.getFileName();\r\n    let filePath = this.filePath;\r\n    let fullName = this.fullName;\r\n    think.mkdir(this.filePath.replace(this.fileName, \"\"));\r\n    let promises = await this.spiderImage(imgUrl, filePath);\r\n    // console.log(promises);\r\n    if (think.isFile(promises)) {\r\n      this.stateInfo = \"SUCCESS\";\r\n    } else {\r\n      this.stateInfo = '文件保存时出错';\r\n    }\r\n    return {\r\n      \"state\": this.stateInfo,\r\n      \"url\": this.fullName,\r\n      \"title\": this.fileName,\r\n      \"original\": this.oriName,\r\n      \"type\": this.fileType,\r\n      \"size\": this.fileSize\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取文件扩展名\r\n   * @return string\r\n   */\r\n  getFileExt() {\r\n\r\n    return this.oriName.substr(this.oriName.lastIndexOf(\".\")).toLocaleLowerCase();\r\n  }\r\n\r\n  /**\r\n   * 重命名文件\r\n   * @return string\r\n   */\r\n  getFullName() {\r\n    //替换目录日期事件\r\n    ///ueditor/php/upload/image/{yyyy}{mm}{dd}/{time}{rand:6}\r\n    //var filename= this.filed;\r\n    var format = this.config.pathFormat;\r\n    var d = new Date();\r\n    var t = d.getTime();\r\n    var date = {};\r\n    date.yyyy = d.getFullYear();\r\n    date.mm = (d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : d.getMonth() + 1;\r\n    date.dd = (d.getDate() < 10 ? \"0\" : \"\") + d.getDate();\r\n    format = format.replace(\"{yyyy}\", date.yyyy);\r\n    format = format.replace(\"{mm}\", date.mm);\r\n    format = format.replace(\"{dd}\", date.dd);\r\n    format = format.replace(\"{time}\", t);\r\n    //计算随机数\r\n    var str = format.match(/\\{rand\\:[\\d]*\\}/i)\r\n    var index = str[0].search(/:/) + 1;\r\n    index = str[0].charAt(index);\r\n    var rand = Math.random();\r\n    rand = rand.toString();\r\n    rand = rand.substr(2, index);\r\n    //替换随机数\r\n    format = format.replace(str[0], rand);\r\n    var ext = this.getFileExt();\r\n    return format + ext;\r\n  }\r\n\r\n  /**\r\n   * 获取文件完整路径\r\n   * @return string\r\n   */\r\n  getFilePath() {\r\n\r\n    if (this.fullName.substr(0, 1) != '/') {\r\n      this.fullName = '/' + this.fullName;\r\n    }\r\n\r\n    return think.UPLOAD_PATH + this.fullName;\r\n  }\r\n\r\n  /**\r\n   * 获取文件名\r\n   * @return string\r\n   */\r\n  getFileName() {\r\n    return path.basename(this.filePath);\r\n  }\r\n\r\n  /**\r\n   * 文件类型检测\r\n   * @return boolean\r\n   */\r\n  checkType() {\r\n    return this.config[\"allowFiles\"].includes(this.getFileExt());\r\n  }\r\n\r\n  /**\r\n   * 文件大小检测\r\n   * @return boolean\r\n   */\r\n  checkSize() {\r\n    return this.fileSize <= (this.config[\"maxSize\"]);\r\n  }\r\n\r\n  /**\r\n   * 获取当前上传成功文件的各项信息\r\n   * @return object\r\n   */\r\n  getFileInfo() {\r\n    return {\r\n      \"state\": this.stateInfo,\r\n      \"url\": this.fullName,\r\n      \"title\": this.fileName,\r\n      \"original\": this.oriName,\r\n      \"type\": this.fileType,\r\n      \"size\": this.fileSize\r\n    };\r\n  }\r\n}"]}