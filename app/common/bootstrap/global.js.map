{"version":3,"sources":["../../../src/common/bootstrap/global.js"],"names":["Segment","require","segment","useDefault","initAuthority","defaultAuthorities","think","config","authorityModel","model","authority","where","name","find","result","isEmpty","addAuthority","desc","paths","initRole","defaultRoles","roleModel","role","addRole","extend","authorities","isStringExpReg","string","isRegExp","match","then","global","removeHTMLTag","str","replace","checkAuction","itemModel","checkStatus","initCheckStatusTimer"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;AAKA;;;;;;;;AAQA;AACA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA;AACA,IAAIC,UAAU,IAAIF,OAAJ,EAAd;AACA;AACAE,QAAQC,UAAR;;AAGA,IAAIC;AAAA,wEAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGdC,8BAHc,GAGOC,MAAMC,MAAN,CAAa,yBAAb,CAHP;AAIdC,0BAJc,GAIGF,MAAMG,KAAN,CAAY,WAAZ,EAAyB,IAAzB,EAA+B,KAA/B,CAJH;AAAA,wBAMIJ,kBANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAMTK,qBANS;AAAA;AAAA,mBAOGF,eAAeG,KAAf,CAAqB,EAACC,MAAMF,UAAUE,IAAjB,EAArB,EAA6CC,IAA7C,EAPH;;AAAA;AAOZC,kBAPY;;AAAA,iBAQZR,MAAMS,OAAN,CAAcD,MAAd,CARY;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASRN,eAAeQ,YAAf,CAA4BN,UAAUE,IAAtC,EAA4CF,UAAUO,IAAtD,EAA4DP,UAAUQ,KAAtE,CATQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAJ;AAaA,IAAIC;AAAA,yEAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGTC,wBAHS,GAGMd,MAAMC,MAAN,CAAa,mBAAb,CAHN;AAITc,qBAJS,GAIGf,MAAMG,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,CAJH;AAAA,yBAMIW,YANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAMJE,gBANI;AAAA;AAAA,mBAOQD,UAAUV,KAAV,CAAgB,EAACC,MAAMU,KAAKV,IAAZ,EAAhB,EAAmCC,IAAnC,EAPR;;AAAA;AAOPC,kBAPO;;AAAA,iBAQPR,MAAMS,OAAN,CAAcD,MAAd,CARO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASHO,UAAUE,OAAV,CAAkBD,KAAKV,IAAvB,EAA6BU,KAAKL,IAAlC,EAAwCK,KAAKE,MAA7C,EAAqDF,KAAKG,WAA1D,CATG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAJ;;AAcAnB,MAAMoB,cAAN,GAAuB,UAACC,MAAD,EAAW;AAChC,SAAOrB,MAAMsB,QAAN,CAAeD,MAAf,KAA0BA,OAAOE,KAAP,CAAa,eAAb,CAAjC;AACD,CAFD;AAGAvB,MAAMJ,OAAN,GAAgBA,OAAhB;;AAEA;AACA;AACAiB,WAAWW,IAAX;;AAEAC,OAAOC,aAAP,GAAuB,UAACC,GAAD,EAAQ;AAC7B,SAAOA,IAAIC,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAP,CAD6B,CACM;AACpC,CAFD;;AAIAH,OAAOI,YAAP,8DAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,mBADgB,GACJ9B,MAAMG,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,CADI;AAAA;AAAA,iBAEd2B,UAAUC,WAAV,EAFc;;AAAA;AAAA;AAAA,iBAGdD,UAAUE,oBAAV,EAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAMAH,eAAeL,IAAf","file":"global.js","sourcesContent":["/**\r\n * this file will be loaded before server started\r\n * you can define global functions used in controllers, models, templates\r\n */\r\n\r\n/**\r\n * use global.xxx to define global functions\r\n *\r\n * global.fn1 = function(){\r\n *     \r\n * }\r\n */\r\n\r\n// 载入模块\r\nvar Segment = require('segment');\r\n// 创建实例\r\nvar segment = new Segment();\r\n// 使用默认的识别模块及字典，载入字典文件需要1秒，仅初始化时执行一次即可\r\nsegment.useDefault();\r\n\r\n\r\nlet initAuthority = async()=> {\r\n  \"use strict\";\r\n\r\n  let defaultAuthorities = think.config('site.defaultAuthorities');\r\n  let authorityModel = think.model('authority', null, 'api');\r\n\r\n  for (let authority of defaultAuthorities) {\r\n    let result = await authorityModel.where({name: authority.name}).find();\r\n    if (think.isEmpty(result)) {\r\n      await authorityModel.addAuthority(authority.name, authority.desc, authority.paths);\r\n    }\r\n  }\r\n};\r\nlet initRole = async()=> {\r\n  \"use strict\";\r\n\r\n  let defaultRoles = think.config('site.defaultRoles');\r\n  let roleModel = think.model('role', null, 'api');\r\n\r\n  for (let role of defaultRoles) {\r\n    let result = await roleModel.where({name: role.name}).find();\r\n    if (think.isEmpty(result)) {\r\n      await roleModel.addRole(role.name, role.desc, role.extend, role.authorities);\r\n    }\r\n  }\r\n};\r\n\r\nthink.isStringExpReg = (string)=> {\r\n  return think.isRegExp(string) || string.match(/^\\/[\\w\\W]+\\/$/);\r\n};\r\nthink.segment = segment;\r\n\r\n//Promise.all([initAuthority(), initRole()]).then();\r\n//initAuthority().then();\r\ninitRole().then();\r\n\r\nglobal.removeHTMLTag = (str)=> {\r\n  return str.replace(/<[^>]+>/g, \"\");//去掉所有的html标记\r\n};\r\n\r\nglobal.checkAuction = async() => {\r\n  let itemModel = think.model(\"item\", null, \"api\");\r\n  await itemModel.checkStatus();\r\n  await itemModel.initCheckStatusTimer();\r\n};\r\n\r\ncheckAuction().then();"]}