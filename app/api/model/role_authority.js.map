{"version":3,"sources":["../../../src/api/model/role_authority.js"],"names":["RoleAuthority","addRoleAuthorities","roleName","authorities","authorityModel","think","model","roleModel","where","name","find","role","isEmpty","an","authority","thenAdd","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,a;;;;;;;;AACrB;;;;;;0BAMQC,kB;2FAAmBC,Q;wCAAaC,W;AAAAA,mB;;;;;;;;;AAEhCC,4B,GAAeC,MAAMC,KAAN,CAAY,WAAZ,EAAwB,IAAxB,EAA6B,KAA7B,C;AACfC,uB,GAAUF,MAAMC,KAAN,CAAY,MAAZ,EAAmB,IAAnB,EAAwB,KAAxB,C;;qBAEGC,UAAUC,KAAV,CAAgB,EAACC,MAAKP,QAAN,EAAhB,EAAiCQ,IAAjC,E;;;AAAbC,kB;;mBAEDN,MAAMO,OAAN,CAAcD,IAAd,C;;;;;;;;0BAIYR,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAANU,gB;;qBACeT,eAAeI,KAAf,CAAqB,EAACC,MAAKI,EAAN,EAArB,EAAgCH,IAAhC,E;;;AAAlBI,uB;;mBACDT,MAAMO,OAAN,CAAcE,SAAd,C;;;;;;;;;qBAGG,KAAKC,OAAL,CAAa,EAACJ,MAAKA,KAAKK,EAAX,EAAcF,WAAUA,UAAUE,EAAlC,EAAb,EAAmD,EAACL,MAAKA,KAAKK,EAAX,EAAcF,WAAUA,UAAUE,EAAlC,EAAnD,C;;;;;;;;;;;;;;;;;;;;;;;;kBAvBShB,a","file":"role_authority.js","sourcesContent":["import Base from './base'\r\n\r\nexport default class RoleAuthority extends Base {\r\n/**\r\n   *\r\n   * @param roleName {String} name of role\r\n   * @param authorities {ObjectID} authorities' name\r\n   * @returns {Promise}\r\n   */\r\n  async addRoleAuthorities(roleName, ...authorities) {\r\n    \r\n    let authorityModel=think.model('authority',null,'api');\r\n    let roleModel=think.model('role',null,'api');\r\n\r\n    let role = await roleModel.where({name:roleName}).find();\r\n\r\n    if(think.isEmpty(role)){\r\n    \treturn ;\r\n    }\r\n\r\n    for (let an of authorities) {\r\n      let authority = await authorityModel.where({name:an}).find();\r\n      if(think.isEmpty(authority)){\r\n      \tcontinue;\r\n      }\r\n      await this.thenAdd({role:role.id,authority:authority.id},{role:role.id,authority:authority.id})\r\n    }\r\n  }\r\n\r\n}"]}