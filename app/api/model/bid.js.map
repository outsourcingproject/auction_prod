{"version":3,"sources":["../../../src/api/model/bid.js"],"names":["Bid","WINNING","FAILING","LEADING","FALLING","STATUS","getList","userId","join","field","where","user","select","getDistinctList","distinct","getPriceOver","order","find","getItemBids","itemId","model","addOne","bid","userModel","think","messageModel","itemModel","startTrans","add","bidId","id","item","sendSystemMessage","from","systemUser","to","title","content","name","status","read","value","bids","console","log","update","messages","map","b","isEmpty","commit","rollback"],"mappings":"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","file":"bid.js","sourcesContent":["import Base from './base.js'\r\n\r\nexport default class Bid extends Base {\r\n  WINNING = 0; // 得标\r\n  FAILING = 1; //失败\r\n  LEADING = 2; //领先\r\n  FALLING = 3; //落后\r\n\r\n  STATUS = [\"得标\",\"竞标失败\",\"暂时领先\",\"被超越\"];\r\n\r\n  // init(...args){\r\n  //   super.init(...args);\r\n  //   this.systemUser = User.systemUser;\r\n  // }\r\n\r\n\r\n\r\n  getList(userId){\r\n    return this.join(\"item on bid.item=item.id\")\r\n      .field(\"bid.id as bid,value as price,bid.createAt,item.name as name,item.id as id,item.status as itemStatus, bid.status as bidStatus\")\r\n      .where({user:userId}).select();\r\n  }\r\n\r\n  getDistinctList(userId){\r\n    return this.where({user:userId})\r\n      .distinct(\"item\")\r\n      .select();\r\n  }\r\n  getPriceOver(userId){\r\n    return this.join(\"item on bid.item = item.id\")\r\n      .field(\"bid.createAt as time, bid.item as id, bid.value as price, item.name\")\r\n      .where(\"user =\" + userId +\" and bid.status = \" + this.FALLING)\r\n      .order(\"bid.createAt DESC\")\r\n      .find();\r\n  }\r\n  // 查询某件物品的所有竞标记录\r\n  // 返回值 id, userId, username, value, status\r\n  getItemBids(itemId){\r\n    return this.model(\"bid\")\r\n      .join(\"user on bid.user = user.id\")\r\n      .field(\"bid.id as id, bid.user as userId, user.username as username, bid.value as price, bid.status as status,bid.createAt\")\r\n      .where(\"bid.item = \" + itemId)\r\n      .select();\r\n  }\r\n//Object:{user:userId, item:item, value:value, status:this.model(\"bid\").LEADING}\r\n  async addOne(bid){\r\n    let userModel = think.model(\"user\",null,\"api\");\r\n    let messageModel = think.model(\"message\",null,\"api\");\r\n    let itemModel = think.model(\"item\",null,\"api\");\r\n    try{\r\n      await this.startTrans();\r\n      let bidId = await this.add(bid);\r\n      let item = await itemModel.where({id:bid.item}).find();\r\n      //发送暂时领先系统消息\r\n      await messageModel.sendSystemMessage([{from:userModel.systemUser, to:bid.user, title:\"系统消息\", content:\"您的商品\"+item.name+this.STATUS[bid.status], read:0}])\r\n\r\n      //更新被超越竞标记录的状态\r\n\r\n      let bids = await this.where({value:{\"<\":bid.value},item:bid.item,user:{\"!=\":bid.user},status:{\"!=\":this.FALLING}}).distinct(\"user\").select();\r\n      console.log(bids);\r\n      await this.where({value:{\"<\":bid.value},item:bid.item})\r\n                .update({status:this.FALLING});\r\n      //给被超越竞标记录的用户发送消息\r\n      let messages = bids.map((b)=>{return {from:userModel.systemUser, to:b.user, title:\"系统消息\", content:\"您的商品\"+item.name+this.STATUS[3], read:0}});\r\n      if(!think.isEmpty(messages)){\r\n          await messageModel.sendSystemMessage(messages);   \r\n      }\r\n      await this.commit();\r\n      return bidId;\r\n    }catch(e){\r\n      await this.rollback();\r\n      return 0;\r\n    }  \r\n  }\r\n\r\n  // 查询竞标状态：'得标', '失败', '领先', '被超'\r\n  // async getStatus(bidId){\r\n  //   console.log(bidId);\r\n  //   let res = 3;\r\n  //   let bid = await this.where({id:bidId}).find();\r\n  //   let itemId = bid[\"item\"];\r\n  //   let userId = bid[\"user\"];\r\n  //   let itemModel = think.model(\"item\",null,\"api\");\r\n  //   let item = (await itemModel.where({id:itemId}).select())[0];\r\n  //   console.log(item);\r\n  //   if(item[\"status\"] == itemModel.AUCTION_ENDED && item[\"currentBidder\"] == userId)\r\n  //     res = 0;\r\n  //   else if(item[\"status\"] == itemModel.AUCTION_ENDED || item[\"status\"] == itemModel.AUCTION_FAILED)\r\n  //     res = 1;\r\n  //   else if(item[\"status\"] == itemModel.AUCTIONING){\r\n  //     let maxPrice = await this.where({item:itemId}).max(\"value\");\r\n  //     console.log(maxPrice);\r\n  //     if(maxPrice == bid[\"value\"])\r\n  //       res = 2;\r\n  //     else res = 3;\r\n  //   }\r\n  //   return res;\r\n  // }\r\n}"]}