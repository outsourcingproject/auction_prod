{"version":3,"sources":["../../../src/api/model/order.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,K;;;;;;;;;;;;gJAEnB,Y,GAAe,C,QACf,Q,GAAW,C,QACX,U,GAAa,C,QACb,a,GAAgB,C,QAChB,U,GAAa,C,QACb,Q,GAAW,C,QACX,Q,GAAW,C;;;AACX;kBACA,M,mBAAO,M,EAAQ,M,EAAQ;AACrB,WAAO,KAAK,GAAL,CAAS,EAAC,MAAM,MAAP,EAAe,MAAM,MAArB,EAA6B,QAAQ,CAArC,EAAT,CAAP;AACD,G;;AAED;AACA;;;kBACA,Y,yBAAa,K,EAAO;AAClB,UAAM,MAAN,GAAe,CAAf;AACA,WAAO,KAAK,KAAL,CAAW,EAAC,IAAI,MAAM,EAAX,EAAX,EAA2B,MAA3B,CAAkC,KAAlC,CAAP;AACD,G;;kBACK,W;2FAAY,K;;;;;;AACZ,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAmB,IAAnB,EAAwB,KAAxB,C;;;qBAER,KAAK,UAAL,E;;;AACN,mBAAK,KAAL,CAAW,EAAC,IAAG,KAAJ,EAAX,EAAuB,MAAvB,CAA8B,EAAC,QAAO,KAAK,QAAb,EAA9B;AACI,kB,GAAO,KAAK,KAAL,CAAW,EAAC,IAAG,KAAJ,EAAX,EAAuB,KAAvB,CAA6B,MAA7B,EAAoC,OAApC,EAA6C,IAA7C,E;AACX;AACA;;;qBACM,KAAK,MAAL,E;;;;;;;;;;qBAEA,KAAK,QAAL,E;;;;;;;;;;;;;;;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;kBACA,S,sBAAU,O,EAAS;AACjB,WAAO,KAAK,KAAL,CAAW,EAAC,IAAI,OAAL,EAAX,EAA0B,MAA1B,CAAiC,EAAC,QAAQ,QAAT,EAAjC,CAAP;AACD,G;;kBAED,O,oBAAQ,M,EAAQ;AACd,WAAO,KAAK,IAAL,CAAU,8BAAV,EACJ,KADI,CACE,kGADF,EAEJ,KAFI,CAEE,EAAC,MAAM,MAAP,EAFF,EAGJ,KAHI,CAGE,qBAHF,EAIJ,MAJI,EAAP;AAKD,G;;kBAED,mB,gCAAoB,M,EAAQ;AAC1B,WAAO,KAAK,IAAL,CAAU,8BAAV,EACJ,KADI,CACE,wCADF,EAEJ,KAFI,CAEE,YAAY,MAAZ,GAAoB,sBAApB,GAA6C,KAAK,YAFpD,EAGJ,KAHI,CAGE,qBAHF,EAIJ,MAJI,EAAP;AAKD,G;;kBAED,U,uBAAW,M,EAAQ;AACjB,WAAO,KAAK,KAAL,CAAW,EAAC,MAAM,MAAP,EAAX,EACJ,KADI,CACE,oBAAoB,KAAK,QAD3B,EAEJ,KAFI,CAEE,wCAFF,EAGJ,IAHI,CAGC,8BAHD,EAIJ,KAJI,CAIE,qBAJF,EAKJ,MALI,EAAP;AAMD,G;;kBAED,Y,2BAAe;AACb,WAAO,KAAK,IAAL,CAAU,8BAAV,EACJ,IADI,CACC,8BADD,EAEJ,KAFI,CAEE,oFAFF,EAGJ,KAHI,CAGE,qBAHF,EAIJ,MAJI,EAAP;AAKD,G;;;;;kBAvFkB,K","file":"order.js","sourcesContent":["import Base from './base.js'\r\n\r\nexport default class Order extends Base {\r\n\r\n  WAIT_CONFIRM = 0;\r\n  WAIT_PAY = 1;\r\n  WAIT_CHECK = 2;\r\n  WAIT_DELIEVER = 3;\r\n  DELIEVERED = 4;\r\n  FINISHED = 5;\r\n  CANCELED = 6;\r\n  //添加新订单 地址为默认地址\r\n  addOne(userId, itemId) {\r\n    return this.add({user: userId, item: itemId, status: 0});\r\n  }\r\n\r\n  //确认订单：买家确定地址等信息，订单更新状态\r\n  //未测试\r\n  confirmOrder(order) {\r\n    order.status = 1;\r\n    return this.where({id: order.id}).update(order);\r\n  }\r\n  async finishOrder(order){\r\n    let userModel = think.model(\"user\",null,\"api\"); \r\n    try{\r\n      await this.startTrans();\r\n      this.where({id:order}).update({status:this.FINISHED});\r\n      let data = this.where({id:order}).field(\"user\",\"price\").find();\r\n      //更新信用值\r\n      // await userModel.where({id:data.user}).increment(\"creditLines\",data.price);\r\n      await this.commit();\r\n    }catch(e){\r\n      await this.rollback();\r\n    }\r\n  }\r\n  //更改订单状态\r\n  // async changeStatus(orderId){\r\n  //   let status = (await this.where({id:orderId}).find())[\"status\"];\r\n  //   switch(status){\r\n  //     case WAIT_CONFIRM:\r\n  //       return this.where({id:orderId}).update({status:WAIT_PAY});\r\n  //     case  WAIT_PAY:\r\n  //       return this.where({id:orderId}).update({status:WAIT_CHECK});\r\n  //     case WAIT_CHECK:\r\n  //       return this.where({id:orderId}).update({status:WAIT_DELIEVER});\r\n  //     case WAIT_DELIEVER:\r\n  //       return this.where({id:orderId}).update({status:DELIEVERED});\r\n  //     case DELIEVERED:\r\n  //       return this.where({id:orderId}).update({status:FINISHED});\r\n  //     default:\r\n  //       return this.where({id:orderId}).update();\r\n  //   }\r\n  // }\r\n  //取消订单，改变订单状态为取消\r\n  cancelOne(orderId) {\r\n    return this.where({id: orderId}).update({status: CANCELED});\r\n  }\r\n\r\n  getList(userId) {\r\n    return this.join(\"item on order.item = item.id\")\r\n      .field(\"order.id, item.name,item.currentPrice as price,order.createAt,order.status,expressName,expressNo\")\r\n      .where({user: userId})\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n\r\n  getConfirmedAuction(userId) {\r\n    return this.join(\"item on order.item = item.id\")\r\n      .field(\"item.name, order.id, item.currentPrice\")\r\n      .where(\"user = \" + userId +\" and order.status = \" + this.WAIT_CONFIRM)\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n\r\n  getWaitPay(userId) {\r\n    return this.where({user: userId})\r\n      .where(\"order.status = \" + this.WAIT_PAY)\r\n      .field(\"item.name, order.id, item.currentPrice\")\r\n      .join(\"item on order.item = item.id\")\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n\r\n  getListAdmin() {\r\n    return this.join(\"item on order.item = item.id\")\r\n      .join(\"user on order.user = user.id\")\r\n      .field(\"item.id, item.name, item.currentPrice, user.username, order.createAt, order.status\")\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n}"]}