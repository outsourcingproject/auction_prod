{"version":3,"sources":["../../../src/api/model/order.js"],"names":["Order","WAIT_CONFIRM","WAIT_PAY","WAIT_CHECK","WAIT_DELIEVER","DELIEVERED","FINISHED","CANCELED","addOne","userId","itemId","add","user","item","status","confirmOrder","order","where","id","update","finishOrder","userModel","think","model","startTrans","data","field","find","commit","rollback","cancelOne","orderId","getList","join","select","getConfirmedAuction","getWaitPay","getListAdmin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,K;;;;;;;;;;;;gJAEnBC,Y,GAAe,C,QACfC,Q,GAAW,C,QACXC,U,GAAa,C,QACbC,a,GAAgB,C,QAChBC,U,GAAa,C,QACbC,Q,GAAW,C,QACXC,Q,GAAW,C;;;AACX;kBACAC,M,mBAAOC,M,EAAQC,M,EAAQ;AACrB,WAAO,KAAKC,GAAL,CAAS,EAACC,MAAMH,MAAP,EAAeI,MAAMH,MAArB,EAA6BI,QAAQ,CAArC,EAAT,CAAP;AACD,G;;AAED;AACA;;;kBACAC,Y,yBAAaC,K,EAAO;AAClBA,UAAMF,MAAN,GAAe,CAAf;AACA,WAAO,KAAKG,KAAL,CAAW,EAACC,IAAIF,MAAME,EAAX,EAAX,EAA2BC,MAA3B,CAAkCH,KAAlC,CAAP;AACD,G;;kBACKI,W;2FAAYJ,K;;;;;;AACZK,uB,GAAYC,MAAMC,KAAN,CAAY,MAAZ,EAAmB,IAAnB,EAAwB,KAAxB,C;;;qBAER,KAAKC,UAAL,E;;;AACN,mBAAKP,KAAL,CAAW,EAACC,IAAGF,KAAJ,EAAX,EAAuBG,MAAvB,CAA8B,EAACL,QAAO,KAAKR,QAAb,EAA9B;AACImB,kB,GAAO,KAAKR,KAAL,CAAW,EAACC,IAAGF,KAAJ,EAAX,EAAuBU,KAAvB,CAA6B,MAA7B,EAAoC,OAApC,EAA6CC,IAA7C,E;AACX;AACA;;;qBACM,KAAKC,MAAL,E;;;;;;;;;;qBAEA,KAAKC,QAAL,E;;;;;;;;;;;;;;;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;kBACAC,S,sBAAUC,O,EAAS;AACjB,WAAO,KAAKd,KAAL,CAAW,EAACC,IAAIa,OAAL,EAAX,EAA0BZ,MAA1B,CAAiC,EAACL,QAAQP,QAAT,EAAjC,CAAP;AACD,G;;kBAEDyB,O,oBAAQvB,M,EAAQ;AACd,WAAO,KAAKwB,IAAL,CAAU,8BAAV,EACJP,KADI,CACE,kGADF,EAEJT,KAFI,CAEE,EAACL,MAAMH,MAAP,EAFF,EAGJO,KAHI,CAGE,qBAHF,EAIJkB,MAJI,EAAP;AAKD,G;;kBAEDC,mB,gCAAoB1B,M,EAAQ;AAC1B,WAAO,KAAKwB,IAAL,CAAU,8BAAV,EACJP,KADI,CACE,wCADF,EAEJT,KAFI,CAEE,YAAYR,MAAZ,GAAoB,sBAApB,GAA6C,KAAKR,YAFpD,EAGJe,KAHI,CAGE,qBAHF,EAIJkB,MAJI,EAAP;AAKD,G;;kBAEDE,U,uBAAW3B,M,EAAQ;AACjB,WAAO,KAAKQ,KAAL,CAAW,EAACL,MAAMH,MAAP,EAAX,EACJQ,KADI,CACE,oBAAoB,KAAKf,QAD3B,EAEJwB,KAFI,CAEE,wCAFF,EAGJO,IAHI,CAGC,8BAHD,EAIJjB,KAJI,CAIE,qBAJF,EAKJkB,MALI,EAAP;AAMD,G;;kBAEDG,Y,2BAAe;AACb,WAAO,KAAKJ,IAAL,CAAU,8BAAV,EACJA,IADI,CACC,8BADD,EAEJP,KAFI,CAEE,oFAFF,EAGJV,KAHI,CAGE,qBAHF,EAIJkB,MAJI,EAAP;AAKD,G;;;;;kBAvFkBlC,K","file":"order.js","sourcesContent":["import Base from './base.js'\r\n\r\nexport default class Order extends Base {\r\n\r\n  WAIT_CONFIRM = 0;\r\n  WAIT_PAY = 1;\r\n  WAIT_CHECK = 2;\r\n  WAIT_DELIEVER = 3;\r\n  DELIEVERED = 4;\r\n  FINISHED = 5;\r\n  CANCELED = 6;\r\n  //添加新订单 地址为默认地址\r\n  addOne(userId, itemId) {\r\n    return this.add({user: userId, item: itemId, status: 0});\r\n  }\r\n\r\n  //确认订单：买家确定地址等信息，订单更新状态\r\n  //未测试\r\n  confirmOrder(order) {\r\n    order.status = 1;\r\n    return this.where({id: order.id}).update(order);\r\n  }\r\n  async finishOrder(order){\r\n    let userModel = think.model(\"user\",null,\"api\"); \r\n    try{\r\n      await this.startTrans();\r\n      this.where({id:order}).update({status:this.FINISHED});\r\n      let data = this.where({id:order}).field(\"user\",\"price\").find();\r\n      //更新信用值\r\n      // await userModel.where({id:data.user}).increment(\"creditLines\",data.price);\r\n      await this.commit();\r\n    }catch(e){\r\n      await this.rollback();\r\n    }\r\n  }\r\n  //更改订单状态\r\n  // async changeStatus(orderId){\r\n  //   let status = (await this.where({id:orderId}).find())[\"status\"];\r\n  //   switch(status){\r\n  //     case WAIT_CONFIRM:\r\n  //       return this.where({id:orderId}).update({status:WAIT_PAY});\r\n  //     case  WAIT_PAY:\r\n  //       return this.where({id:orderId}).update({status:WAIT_CHECK});\r\n  //     case WAIT_CHECK:\r\n  //       return this.where({id:orderId}).update({status:WAIT_DELIEVER});\r\n  //     case WAIT_DELIEVER:\r\n  //       return this.where({id:orderId}).update({status:DELIEVERED});\r\n  //     case DELIEVERED:\r\n  //       return this.where({id:orderId}).update({status:FINISHED});\r\n  //     default:\r\n  //       return this.where({id:orderId}).update();\r\n  //   }\r\n  // }\r\n  //取消订单，改变订单状态为取消\r\n  cancelOne(orderId) {\r\n    return this.where({id: orderId}).update({status: CANCELED});\r\n  }\r\n\r\n  getList(userId) {\r\n    return this.join(\"item on order.item = item.id\")\r\n      .field(\"order.id, item.name,item.currentPrice as price,order.createAt,order.status,expressName,expressNo\")\r\n      .where({user: userId})\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n\r\n  getConfirmedAuction(userId) {\r\n    return this.join(\"item on order.item = item.id\")\r\n      .field(\"item.name, order.id, item.currentPrice\")\r\n      .where(\"user = \" + userId +\" and order.status = \" + this.WAIT_CONFIRM)\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n\r\n  getWaitPay(userId) {\r\n    return this.where({user: userId})\r\n      .where(\"order.status = \" + this.WAIT_PAY)\r\n      .field(\"item.name, order.id, item.currentPrice\")\r\n      .join(\"item on order.item = item.id\")\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n\r\n  getListAdmin() {\r\n    return this.join(\"item on order.item = item.id\")\r\n      .join(\"user on order.user = user.id\")\r\n      .field(\"item.id, item.name, item.currentPrice, user.username, order.createAt, order.status\")\r\n      .order(\"order.createAt DESC\")\r\n      .select();\r\n  }\r\n}"]}