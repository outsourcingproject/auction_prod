{"version":3,"sources":["../../../src/api/model/order.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,K;;;;;;;;;;;;gJAEnB,Y,GAAe,C,QACf,Q,GAAW,C,QACX,U,GAAa,C,QACb,a,GAAgB,C,QAChB,U,GAAa,C,QACb,Q,GAAW,C,QACX,Q,GAAW,C;;;AACX;kBACA,M,mBAAO,M,EAAQ,M,EAAQ;AACrB,WAAO,KAAK,GAAL,CAAS,EAAC,MAAM,MAAP,EAAe,MAAM,MAArB,EAA6B,QAAQ,CAArC,EAAT,CAAP;AACD,G;;AAED;AACA;;;kBACA,Y,yBAAa,K,EAAO;AAClB,UAAM,MAAN,GAAe,CAAf;AACA,WAAO,KAAK,KAAL,CAAW,EAAC,IAAI,MAAM,EAAX,EAAX,EAA2B,MAA3B,CAAkC,KAAlC,CAAP;AACD,G;;kBACK,W;2FAAY,K;;;;;;AACZ,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAmB,IAAnB,EAAwB,KAAxB,C;;;qBAER,KAAK,UAAL,E;;;AACN,mBAAK,KAAL,CAAW,EAAC,IAAG,KAAJ,EAAX,EAAuB,MAAvB,CAA8B,EAAC,QAAO,KAAK,QAAb,EAA9B;AACI,kB,GAAO,KAAK,KAAL,CAAW,EAAC,IAAG,KAAJ,EAAX,EAAuB,KAAvB,CAA6B,MAA7B,EAAoC,OAApC,EAA6C,IAA7C,E;AACX;AACA;;;qBACM,KAAK,MAAL,E;;;;;;;;;;qBAEA,KAAK,QAAL,E;;;;;;;;;;;;;;;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;kBACA,S,sBAAU,O,EAAS;AACjB,WAAO,KAAK,KAAL,CAAW,EAAC,IAAI,OAAL,EAAX,EAA0B,MAA1B,CAAiC,EAAC,QAAQ,QAAT,EAAjC,CAAP;AACD,G;;kBAED,O,oBAAQ,M,EAAQ;AACd,WAAO,KAAK,IAAL,CAAU,8BAAV,EACJ,KADI,CACE,kGADF,EAEJ,KAFI,CAEE,EAAC,MAAM,MAAP,EAFF,EAGJ,KAHI,CAGE,qBAHF,EAIJ,MAJI,EAAP;AAKD,G;;kBAED,mB,gCAAoB,M,EAAQ;AAC1B,WAAO,KAAK,IAAL,CAAU,8BAAV,EACJ,KADI,CACE,wCADF,EAEJ,KAFI,CAEE,YAAY,MAAZ,GAAoB,sBAApB,GAA6C,KAAK,YAFpD,EAGJ,KAHI,CAGE,qBAHF,EAIJ,MAJI,EAAP;AAKD,G;;kBAED,U,uBAAW,M,EAAQ;AACjB,WAAO,KAAK,KAAL,CAAW,EAAC,MAAM,MAAP,EAAX,EACJ,KADI,CACE,oBAAoB,KAAK,QAD3B,EAEJ,KAFI,CAEE,wCAFF,EAGJ,IAHI,CAGC,8BAHD,EAIJ,KAJI,CAIE,qBAJF,EAKJ,MALI,EAAP;AAMD,G;;kBAED,Y,2BAAe;AACb,WAAO,KAAK,IAAL,CAAU,8BAAV,EACJ,IADI,CACC,8BADD,EAEJ,KAFI,CAEE,oFAFF,EAGJ,KAHI,CAGE,qBAHF,EAIJ,MAJI,EAAP;AAKD,G;;;;;kBAvFkB,K","file":"order.js","sourcesContent":["import Base from './base.js'\n\nexport default class Order extends Base {\n\n  WAIT_CONFIRM = 0;\n  WAIT_PAY = 1;\n  WAIT_CHECK = 2;\n  WAIT_DELIEVER = 3;\n  DELIEVERED = 4;\n  FINISHED = 5;\n  CANCELED = 6;\n  //添加新订单 地址为默认地址\n  addOne(userId, itemId) {\n    return this.add({user: userId, item: itemId, status: 0});\n  }\n\n  //确认订单：买家确定地址等信息，订单更新状态\n  //未测试\n  confirmOrder(order) {\n    order.status = 1;\n    return this.where({id: order.id}).update(order);\n  }\n  async finishOrder(order){\n    let userModel = think.model(\"user\",null,\"api\"); \n    try{\n      await this.startTrans();\n      this.where({id:order}).update({status:this.FINISHED});\n      let data = this.where({id:order}).field(\"user\",\"price\").find();\n      //更新信用值\n      // await userModel.where({id:data.user}).increment(\"creditLines\",data.price);\n      await this.commit();\n    }catch(e){\n      await this.rollback();\n    }\n  }\n  //更改订单状态\n  // async changeStatus(orderId){\n  //   let status = (await this.where({id:orderId}).find())[\"status\"];\n  //   switch(status){\n  //     case WAIT_CONFIRM:\n  //       return this.where({id:orderId}).update({status:WAIT_PAY});\n  //     case  WAIT_PAY:\n  //       return this.where({id:orderId}).update({status:WAIT_CHECK});\n  //     case WAIT_CHECK:\n  //       return this.where({id:orderId}).update({status:WAIT_DELIEVER});\n  //     case WAIT_DELIEVER:\n  //       return this.where({id:orderId}).update({status:DELIEVERED});\n  //     case DELIEVERED:\n  //       return this.where({id:orderId}).update({status:FINISHED});\n  //     default:\n  //       return this.where({id:orderId}).update();\n  //   }\n  // }\n  //取消订单，改变订单状态为取消\n  cancelOne(orderId) {\n    return this.where({id: orderId}).update({status: CANCELED});\n  }\n\n  getList(userId) {\n    return this.join(\"item on order.item = item.id\")\n      .field(\"order.id, item.name,item.currentPrice as price,order.createAt,order.status,expressName,expressNo\")\n      .where({user: userId})\n      .order(\"order.createAt DESC\")\n      .select();\n  }\n\n  getConfirmedAuction(userId) {\n    return this.join(\"item on order.item = item.id\")\n      .field(\"item.name, order.id, item.currentPrice\")\n      .where(\"user = \" + userId +\" and order.status = \" + this.WAIT_CONFIRM)\n      .order(\"order.createAt DESC\")\n      .select();\n  }\n\n  getWaitPay(userId) {\n    return this.where({user: userId})\n      .where(\"order.status = \" + this.WAIT_PAY)\n      .field(\"item.name, order.id, item.currentPrice\")\n      .join(\"item on order.item = item.id\")\n      .order(\"order.createAt DESC\")\n      .select();\n  }\n\n  getListAdmin() {\n    return this.join(\"item on order.item = item.id\")\n      .join(\"user on order.user = user.id\")\n      .field(\"item.id, item.name, item.currentPrice, user.username, order.createAt, order.status\")\n      .order(\"order.createAt DESC\")\n      .select();\n  }\n}"]}