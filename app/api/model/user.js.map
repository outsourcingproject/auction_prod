{"version":3,"sources":["../../../src/api/model/user.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;AAGA;;;;;IAKqB,I;;;;;;;;AACnB;;;;;;;;iBAQM,U;2FAAW,Q,EAAU,Q,EAAU,K;UAAO,I,yDAAO,C;;;;;;;qBACzB,MAAM,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,CAAuC,0BAAvC,C;;;AAApB,yB;;qBACa,MAAM,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,CAAuC,mBAAvC,C;;;AAAb,kB;;qBACc,MAAM,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,CAAuC,oBAAvC,C;;;AAAd,mB;AACA,uB,GAAY,CAAC,IAAI,IAAJ,E;;qBAEE,KAAK,KAAL,CAAW,EAAC,kBAAD,EAAX,EAAuB,MAAvB,E;;;AAAf,oB;;kBACC,MAAM,OAAN,CAAc,MAAd,C;;;;;+CACI,oB;;;;qBAEM,KAAK,KAAL,CAAW,EAAC,YAAD,EAAX,EAAoB,MAApB,E;;;AAAf,oB;;kBACK,MAAM,OAAN,CAAc,MAAd,C;;;;;+CACI,oB;;;;qBAEM,KAAK,GAAL,CAAS,EAAC,kBAAD,EAAW,kBAAX,EAAqB,YAArB,EAA4B,UAA5B,EAAkC,wBAAlC,EAA+C,UAA/C,EAAqD,YAArD,EAA4D,oBAA5D,EAAT,C;;;AAAf,oB;+CAEO,KAAK,KAAL,CAAW,EAAC,IAAI,MAAL,EAAX,EAAyB,IAAzB,E;;;;;;;;;;;;;;;;;AAGT;;;;;;;;iBAMM,S;6FAAU,Q,EAAU,Q;;;;;;;qBACL,KAAK,KAAL,CAAW,EAAC,kBAAD,EAAX,EAAuB,IAAvB,E;;;AAAf,oB;;mBACA,MAAM,OAAN,CAAc,MAAd,C;;;;;gDACK,c;;;oBAEL,OAAO,QAAP,IAAmB,Q;;;;;gDACd,gB;;;;qBAIH,KAAK,KAAL,CAAW,EAAC,IAAI,OAAO,EAAZ,EAAX,EAA4B,MAA5B,CAAmC,EAAC,WAAW,CAAC,IAAI,IAAJ,EAAb,EAAnC,C;;;gDACC,M;;;;;;;;;;;;;;;;;AAGT;;;;;;;iBAKA,O,oBAAQ,Q,EAAU;AAChB,WAAO,KAAK,KAAL,CAAW,EAAC,kBAAD,EAAX,EAAuB,MAAvB,EAAP;AACD,G;;AAED;;;;;;;iBAKM,W;6FAAY,Q;;;;;;;qBACC,KAAK,KAAL,CAAW,EAAC,kBAAD,EAAX,EAAuB,IAAvB,E;;;AAAb,kB;;AACJ,sBAAQ,GAAR,CAAY,IAAZ;AACI,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;gDACT,UAAU,KAAV,CAAgB,EAAC,MAAM,KAAK,IAAZ,EAAhB,EAAmC,IAAnC,E;;;;;;;;;;;;;;;;;AAGT;;;;;;;iBAKM,kB;6FAAmB,Q;;;;;;AACnB,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;;qBACC,KAAK,KAAL,CAAW,EAAC,kBAAD,EAAX,EAAuB,IAAvB,E;;;AAAb,kB;;qBACa,UAAU,KAAV,CAAgB,EAAC,IAAI,KAAK,IAAV,EAAhB,EAAiC,IAAjC,E;;;AAAb,kB;gDAEG,UAAU,kBAAV,CAA6B,KAAK,IAAlC,C;;;;;;;;;;;;;;;;;iBAGT,c,2BAAe,M,EAAQ;AACrB,QAAI,aAAa,MAAM,KAAN,CAAY,OAAZ,EAAqB,IAArB,EAA2B,KAA3B,CAAjB;AACA,WAAO,WAAW,KAAX,CAAiB,EAAC,MAAM,MAAP,EAAjB,EAAiC,KAAjC,EAAP;AACD,G;;iBAEK,gB;6FAAiB,M;;;;;;AACjB,wB,GAAa,MAAM,KAAN,CAAY,OAAZ,EAAqB,IAArB,EAA2B,KAA3B,C;AACb,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;;qBACI,WAAW,KAAX,CAAiB,MAAjB,EAAyB,KAAzB,CAA+B,EAAC,MAAM,MAAP,EAA/B,EAA+C,MAA/C,E;;;AAAhB,qB;;mBACA,MAAM,OAAN,CAAc,OAAd,C;;;;;gDACK,C;;;AACL,yB,GAAc,QAAQ,GAAR,CAAY,UAAC,CAAD;AAAA,uBAAK,EAAE,MAAF,CAAL;AAAA,eAAZ,C;gDACX,UAAU,KAAV,CAAgB,EAAC,IAAI,CAAC,IAAD,EAAO,WAAP,CAAL,EAAhB,EAA2C,GAA3C,CAA+C,cAA/C,C;;;;;;;;;;;;;;;;;;mBAzGX;;;;;kBAWqB,I","file":"user.js","sourcesContent":["/**\r\n * Created by zl on 2015/12/30.\r\n */\r\nimport Base from './base.js'\r\n\r\n\r\n/**\r\n * 成功时返回true或者具体对象\r\n * 失败时返回失败字符串,具体请参看 /src/common/config/local/en.js\r\n * 如果没有当前需要的失败字符串,请在该文件中定义\r\n */\r\nexport default class User extends Base {\r\n  /**\r\n   *\r\n   * @param username\r\n   * @param password\r\n   * @param email\r\n   * @param role\r\n   * @returns {*} user object if success, otherwise err string\r\n   */\r\n  async createUser(username, password, email, role = 2 /* 'registered'*/) {\r\n    let creditLines = await think.model('config', null, 'api').get('user.default.creditLines');\r\n    let desc = await think.model('config', null, 'api').get('user.default.desc');\r\n    let level = await think.model('config', null, 'api').get('user.default.level');\r\n    let lastLogin = +new Date();\r\n\r\n    let result = await this.where({username}).select();\r\n    if (!think.isEmpty(result)) {\r\n      return 'USER_ALREADY_EXIST';\r\n    }\r\n    result = await this.where({email}).select();\r\n    if (!think.isEmpty(result)) {\r\n      return 'EMAIL_ALREADY_USED';\r\n    }\r\n    result = await this.add({username, password, email, role, creditLines, desc, level, lastLogin});\r\n\r\n    return this.where({id: result}).find();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param username\r\n   * @param password\r\n   * @returns {*} user object if success, otherwise err string\r\n   */\r\n  async checkUser(username, password) {\r\n    let result = await this.where({username}).find();\r\n    if (think.isEmpty(result)) {\r\n      return 'NO_THIS_USER';\r\n    }\r\n    if (result.password != password) {\r\n      return 'PASSWORD_WORRY';\r\n    }\r\n\r\n    //update last login\r\n    await this.where({id: result.id}).update({lastLogin: +new Date()});\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param username\r\n   * @returns {Promise}\r\n   */\r\n  delUser(username) {\r\n    return this.where({username}).delete();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param username\r\n   * @returns {Promise<Role>}\r\n   */\r\n  async getUserRole(username) {\r\n    let user = await this.where({username}).find();\r\n    console.log(user);\r\n    let roleModel = think.model('role', null, 'api');\r\n    return roleModel.where({name: user.role}).find();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param username\r\n   * @returns {Promise<[Authority]>}\r\n   */\r\n  async getUserAuthorities(username) {\r\n    let roleModel = think.model('role', null, 'api');\r\n    let user = await this.where({username}).find();\r\n    let role = await roleModel.where({id: user.role}).find();\r\n    // console.log(role);\r\n    return roleModel.getRoleAuthorities(role.name);\r\n  }\r\n\r\n  getTotalVolume(userId) {\r\n    let orderModel = think.model(\"order\", null, \"api\");\r\n    return orderModel.where({user: userId}).count();\r\n  }\r\n\r\n  async getTotalTurnover(userId) {\r\n    let orderModel = think.model(\"order\", null, \"api\");\r\n    let itemModel = think.model(\"item\", null, \"api\");\r\n    let itemIds = await orderModel.field(\"item\").where({user: userId}).select();\r\n    if (think.isEmpty(itemIds))\r\n      return 0;\r\n    let itemIdArray = itemIds.map((i)=>i[\"item\"]);\r\n    return itemModel.where({id: [\"IN\", itemIdArray]}).sum(\"currentPrice\");\r\n  }\r\n}"]}