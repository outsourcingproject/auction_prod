{"version":3,"sources":["../../../src/api/model/item.js"],"names":["Item","AUCTION_NOT_STARTED","AUCTIONING","AUCTION_ENDED","AUCTION_FAILED","init","args","relation","item_group","type","think","model","BELONG_TO","key","fKey","order","beforeAdd","data","auctionBeginTime","Date","getStage","currPrice","console","log","configModel","get","configStage","res","filter","i","sort","j","checkStatus","currentTime","getTime","bidModel","orderModel","itemModel","messageModel","userModel","where","auctionEndTime","status","select","items_end","item","count","boolBid","isEmpty","id","update","addOne","value","WINNING","FAILING","sendSystemMessage","from","systemUser","to","title","content","STATUS","read","userIds","user","distinct","messages","map","u","items_auctioning","setCheckStatusTimer","time","setTimeout","then","initCheckStatusTimer","now","items","getListAdmin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,I;;;;;;;;;;;;gJAEnBC,mB,GAAsB,C,QACtBC,U,GAAa,C,QACbC,a,GAAgB,C,QAChBC,c,GAAiB,C;;;AAAG;;iBAEpBC,I,mBAAc;AAAA;;AAAA,uCAANC,IAAM;AAANA,UAAM;AAAA;;AACZ,4CAAMD,IAAN,iDAAcC,IAAd;AACA,SAAKC,QAAL,GAAgB;AACdC,kBAAY;AACVC,cAAMC,MAAMC,KAAN,CAAYC,SADR;AAEVC,aAAK,OAFK;AAGVC,cAAM,IAHI;AAIVC,eAAO,eAJG;AAKVR,kBAAU;AALA;AADE,KAAhB;AASD,G;;iBAEDS,S,sBAAUC,I,EAAM;AACdA,WAAO,gBAAMD,SAAN,YAAgBC,IAAhB,CAAP;AACAA,SAAKC,gBAAL,GAAwBD,KAAKC,gBAAL,IAAyB,IAAIC,IAAJ,EAAjD;AACA,WAAOF,IAAP;AACD,G;;iBAEKG,Q;2FAASC,S;;;;;;AACbC,sBAAQC,GAAR,CAAYF,SAAZ;AACIG,yB,GAAcd,MAAMC,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,KAA5B,C;;qBACMa,YAAYC,GAAZ,CAAgB,yBAAhB,C;;;AAApBC,yB;AACAC,iB,GAAMD,YAAYE,MAAZ,CAAmB,UAACC,CAAD;AAAA,uBAAKA,EAAE,CAAF,KAAQR,SAAb;AAAA,eAAnB,EAA2CS,IAA3C,CAAgD,UAACD,CAAD,EAAIE,CAAJ;AAAA,uBAAQF,EAAE,CAAF,IAAOE,EAAE,CAAF,CAAf;AAAA,eAAhD,EAAqE,CAArE,EAAwE,CAAxE,C;+CACHJ,G;;;;;;;;;;;;;;;;;AAGT;;;iBACMK,W;;;;;;;;;;AACAC,yB,GAAc,IAAId,IAAJ,GAAWe,OAAX,E;AACdC,sB,GAAWzB,MAAMC,KAAN,CAAY,KAAZ,EAAmB,IAAnB,EAAyB,KAAzB,C;AACXyB,wB,GAAa1B,MAAMC,KAAN,CAAY,OAAZ,EAAqB,IAArB,EAA2B,KAA3B,C;AACb0B,uB,GAAY3B,MAAMC,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;AACZ2B,0B,GAAe5B,MAAMC,KAAN,CAAY,SAAZ,EAAuB,IAAvB,EAA6B,KAA7B,C;AACf4B,uB,GAAY7B,MAAMC,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;;;AAEhBW,sBAAQC,GAAR,CAAY,mDAAZ;;;qBAEsB,KAAKiB,KAAL,CAAW;AAC/BC,gCAAgB,EAAC,KAAKR,WAAN,EADe;AAE/BS,wBAAQ,CAAC,OAAD,EAAU,CAAC,KAAKtC,cAAN,EAAsB,KAAKD,aAA3B,CAAV;AAFuB,eAAX,EAGnBwC,MAHmB,E;;;AAAlBC,uB;;;AAKJtB,sBAAQC,GAAR,CAAY,uDAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAESM,yB;;+BACaM,SAASK,KAAT,CAAe,EAACK,MAAMhB,EAAE,IAAF,CAAP,EAAf,EAAgCiB,KAAhC,E;;;AAAhBC,+B;;8BACAA,WAAW,CAAX,IAAgBrC,MAAMsC,OAAN,CAAcnB,EAAE,eAAF,CAAd,C;;;;;;+BACZ,OAAKW,KAAL,CAAW,EAACS,IAAIpB,EAAE,IAAF,CAAL,EAAX,EAA0BqB,MAA1B,CAAiC,EAACR,QAAQ,OAAKtC,cAAd,EAAjC,C;;;;;;;;+BAMA,OAAKoC,KAAL,CAAW,EAACS,IAAIpB,EAAE,IAAF,CAAL,EAAX,EAA0BqB,MAA1B,CAAiC,EAACR,QAAQ,OAAKvC,aAAd,EAAjC,C;;;;+BACAiC,WAAWe,MAAX,CAAkBtB,EAAE,eAAF,CAAlB,EAAsCA,EAAE,IAAF,CAAtC,C;;;;+BAEAM,SAASK,KAAT,CAAe,EAACK,MAAMhB,EAAE,IAAF,CAAP,EAAgBuB,OAAOvB,EAAE,cAAF,CAAvB,EAAf,EAA0DqB,MAA1D,CAAiE,EAACR,QAAQP,SAASkB,OAAlB,EAAjE,C;;;;+BACAlB,SAASK,KAAT,CAAe,EAACK,MAAMhB,EAAE,IAAF,CAAP,EAAgBuB,OAAO,CAAC,IAAD,EAAOvB,EAAE,cAAF,CAAP,CAAvB,EAAf,EAAkEqB,MAAlE,CAAyE,EAACR,QAAQP,SAASmB,OAAlB,EAAzE,C;;;;+BAEAhB,aAAaiB,iBAAb,CAA+B,CAAC;AACpCC,gCAAMjB,UAAUkB,UADoB;AAEpCC,8BAAI7B,EAAE,eAAF,CAFgC;AAGpC8B,iCAAO,MAH6B;AAIpCC,mCAAS,SAAS/B,EAAE,MAAF,CAAT,GAAqBM,SAAS0B,MAAT,CAAgB,CAAhB,CAJM;AAKpCC,gCAAM;AAL8B,yBAAD,CAA/B,C;;;AAOFC,+B,GAAU5B,SAASK,KAAT,CAAe;AAC3BK,gCAAMhB,EAAE,IAAF,CADqB;AAE3Ba,kCAAQP,SAASmB,OAFU;AAG3BU,gCAAM,EAAC,MAAMnC,EAAE,eAAF,CAAP;AAHqB,yBAAf,EAIXoC,QAJW,CAIF,IAJE,EAIItB,MAJJ,E;AAKVuB,gC,GAAWH,QAAQI,GAAR,CAAY,UAACC,CAAD,EAAM;AAC/B,iCAAO;AACLZ,kCAAMjB,UAAUkB,UADX;AAELC,gCAAIU,EAAEJ,IAFD;AAGLL,mCAAO,MAHF;AAILC,qCAAS,SAAS/B,EAAE,MAAF,CAAT,GAAqBM,SAAS0B,MAAT,CAAgB,CAAhB,CAJzB;AAKLC,kCAAM;AALD,2BAAP;AAOD,yBARc,C;;+BASTxB,aAAaiB,iBAAb,CAA+BW,QAA/B,C;;;;;;;;;0BApCItB,S;;;;;;;;;;;;;;;;;;;;;AA4CdtB,sBAAQC,GAAR,CAAY,iDAAZ;;;qBAE8Bc,UAAUG,KAAV,CAAgB;AAC5CtB,kCAAkB,EAAC,KAAKe,WAAN,EAD0B;AAE5CQ,gCAAgB,EAAC,KAAKR,WAAN,EAF4B;AAG5CS,wBAAQ,CAAC,OAAD,EAAU,CAAC,KAAKxC,UAAN,CAAV;AAHoC,eAAhB,EAI3ByC,MAJ2B,E;;;AAA1B0B,8B;;AAKJ/C,sBAAQC,GAAR,CAAY,8DAAZ;2BACc8C,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAALxC,iB;;qBACDQ,UAAUG,KAAV,CAAgB,EAACS,IAAIpB,IAAE,IAAF,CAAL,EAAhB,EAA+BqB,MAA/B,CAAsC,EAACR,QAAQ,KAAKxC,UAAd,EAAtC,C;;;;;;;AAERoB,sBAAQC,GAAR,CAAY,oDAAZ;gDACO,I;;;;;;;;;;;;;;;;;iBAGT+C,mB,gCAAoBC,I,EAAM;AAAA;;AACxBjD,YAAQC,GAAR,CAAY,wEAAZ;AACAiD,eAAW,YAAK;AACdlD,cAAQC,GAAR,CAAY,qEAAZ;AACA,aAAKS,WAAL,GAAmByC,IAAnB;AACD,KAHD,EAGGF,IAHH;AAID,G;;iBAEKG,oB;;;;;;;;AACAC,iB,GAAM,CAAC,IAAIxD,IAAJ,E;;qBACO,KAAKqB,KAAL,CAAW;AAC3BE,wBAAQ,CAAC,OAAD,EAAU,CAAC,KAAKtC,cAAN,EAAsB,KAAKD,aAA3B,CAAV;AADmB,eAAX,EAEfwC,MAFe,E;;;AAAdiC,mB;;AAGJ,mBAAS/C,GAAT,IAAc+C,KAAd,EAAqB;AACnB,oBAAI/C,IAAEX,gBAAF,GAAqByD,GAAzB,EAA8B;AAC5B,uBAAKL,mBAAL,CAAyBzC,IAAEX,gBAAF,GAAqByD,GAA9C;AACA,uBAAKL,mBAAL,CAAyBzC,IAAEY,cAAF,GAAmBkC,GAA5C;AACD,iBAHD,MAGO,IAAI9C,IAAEY,cAAF,GAAmBkC,GAAvB,EAA4B;AACjC,uBAAKL,mBAAL,CAAyBzC,IAAEY,cAAF,GAAmBkC,GAA5C;AACD;AACF;;;;;;;;;;;;;;;;;iBAGHE,Y,2BAAe;AACb,WAAO,KAAK9D,KAAL,CAAW,oBAAX,EACJ4B,MADI,EAAP;AAED,G;;;;;kBAzIkB3C,I","file":"item.js","sourcesContent":["import Base from './base.js'\r\n\r\nexport default class Item extends Base {\r\n\r\n  AUCTION_NOT_STARTED = 0;\r\n  AUCTIONING = 1;\r\n  AUCTION_ENDED = 2;\r\n  AUCTION_FAILED = 3; //流拍\r\n\r\n  init(...args) {\r\n    super.init(...args);\r\n    this.relation = {\r\n      item_group: {\r\n        type: think.model.BELONG_TO,\r\n        key: \"group\",\r\n        fKey: \"id\",\r\n        order: \"createAt DESC\",\r\n        relation: false\r\n      }\r\n    };\r\n  }\r\n\r\n  beforeAdd(data) {\r\n    data = super.beforeAdd(data);\r\n    data.auctionBeginTime = data.auctionBeginTime || new Date();\r\n    return data;\r\n  }\r\n\r\n  async getStage(currPrice) {\r\n    console.log(currPrice);\r\n    let configModel = think.model(\"config\", null, \"api\");\r\n    let configStage = await configModel.get(\"auction.bid_increasment\");\r\n    let res = configStage.filter((i)=>i[0] <= currPrice).sort((i, j)=>i[0] < j[0])[0][1];\r\n    return res;\r\n  }\r\n\r\n  //check and change item status\r\n  async checkStatus() {\r\n    let currentTime = new Date().getTime();\r\n    let bidModel = think.model(\"bid\", null, \"api\");\r\n    let orderModel = think.model(\"order\", null, \"api\");\r\n    let itemModel = think.model(\"item\", null, \"api\");\r\n    let messageModel = think.model(\"message\", null, \"api\");\r\n    let userModel = think.model(\"user\", null, \"api\");\r\n\r\n    console.log('----------------------start----------------------');\r\n\r\n    let items_end = await this.where({\r\n      auctionEndTime: {\"<\": currentTime},\r\n      status: [\"NOTIN\", [this.AUCTION_FAILED, this.AUCTION_ENDED]]\r\n    }).select();\r\n\r\n    console.log('----------------------items_end----------------------');\r\n    \r\n    for (let i of items_end) {\r\n      let boolBid = await bidModel.where({item: i[\"id\"]}).count();\r\n      if (boolBid == 0 || think.isEmpty(i[\"currentBidder\"])) {\r\n        await this.where({id: i[\"id\"]}).update({status: this.AUCTION_FAILED});\r\n      }\r\n      else {\r\n        // #comment：用事务处理出错\r\n        // try{\r\n        //   await this.startTrans();\r\n        await this.where({id: i[\"id\"]}).update({status: this.AUCTION_ENDED});\r\n        await orderModel.addOne(i[\"currentBidder\"], i[\"id\"]);\r\n        //更新bid 状态\r\n        await bidModel.where({item: i[\"id\"], value: i[\"currentPrice\"]}).update({status: bidModel.WINNING});\r\n        await bidModel.where({item: i[\"id\"], value: [\"!=\", i[\"currentPrice\"]]}).update({status: bidModel.FAILING});\r\n        //发送成功和失败的系统消息\r\n        await messageModel.sendSystemMessage([{\r\n          from: userModel.systemUser,\r\n          to: i[\"currentBidder\"],\r\n          title: \"系统消息\",\r\n          content: \"您的商品\" + i[\"name\"] + bidModel.STATUS[0],\r\n          read: 0\r\n        }]);\r\n        let userIds = bidModel.where({\r\n          item: i[\"id\"],\r\n          status: bidModel.FAILING,\r\n          user: {\"!=\": i[\"currentBidder\"]}\r\n        }).distinct(\"id\").select();\r\n        let messages = userIds.map((u)=> {\r\n          return {\r\n            from: userModel.systemUser,\r\n            to: u.user,\r\n            title: \"系统消息\",\r\n            content: \"您的商品\" + i[\"name\"] + bidModel.STATUS[1],\r\n            read: 0\r\n          }\r\n        });\r\n        await messageModel.sendSystemMessage(messages);\r\n        //   await this.commit();\r\n        // }catch(e){\r\n        //   await this.rollback();\r\n        // }\r\n      }\r\n    }\r\n\r\n    console.log('----------------------for----------------------');\r\n\r\n    let items_auctioning = await  itemModel.where({\r\n      auctionBeginTime: {\"<\": currentTime},\r\n      auctionEndTime: {\">\": currentTime},\r\n      status: [\"NOTIN\", [this.AUCTIONING]]\r\n    }).select();\r\n    console.log('----------------------items_auctioning----------------------');\r\n    for (let i of items_auctioning) {\r\n      await itemModel.where({id: i[\"id\"]}).update({status: this.AUCTIONING})\r\n    }\r\n    console.log('----------------------return----------------------');\r\n    return true; //返回值有问题。\r\n  }\r\n\r\n  setCheckStatusTimer(time) {\r\n    console.log('-----------------------set-----------------timer----------------------');\r\n    setTimeout(()=> {\r\n      console.log('----------------------------------------timer----------------------');\r\n      this.checkStatus().then();\r\n    }, time);\r\n  }\r\n\r\n  async initCheckStatusTimer() {\r\n    let now = +new Date();\r\n    let items = await this.where({\r\n      status: [\"NOTIN\", [this.AUCTION_FAILED, this.AUCTION_ENDED]]\r\n    }).select();\r\n    for (let i in items) {\r\n      if (i.auctionBeginTime > now) {\r\n        this.setCheckStatusTimer(i.auctionBeginTime - now);\r\n        this.setCheckStatusTimer(i.auctionEndTime - now);\r\n      } else if (i.auctionEndTime > now) {\r\n        this.setCheckStatusTimer(i.auctionEndTime - now);\r\n      }\r\n    }\r\n  }\r\n\r\n  getListAdmin() {\r\n    return this.order(\"item.createAt DESC\")\r\n      .select();\r\n  }\r\n}"]}