{"version":3,"sources":["../../../src/api/model/item.js"],"names":[],"mappings":"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","file":"item.js","sourcesContent":["import Base from './base.js'\r\n\r\nexport default class Item extends Base {\r\n\r\n  AUCTION_NOT_STARTED = 0;\r\n  AUCTIONING = 1;\r\n  AUCTION_ENDED = 2;\r\n  AUCTION_FAILED = 3; //流拍\r\n\r\n  init(...args) {\r\n    super.init(...args);\r\n    this.relation = {\r\n      item_group: {\r\n        type: think.model.BELONG_TO,\r\n        key: \"group\",\r\n        fKey: \"id\",\r\n        order: \"createAt DESC\",\r\n        relation: false\r\n      }\r\n    };\r\n  }\r\n\r\n  beforeAdd(data) {\r\n    data = super.beforeAdd(data);\r\n    data.auctionBeginTime = data.auctionBeginTime || new Date();\r\n    return data;\r\n  }\r\n\r\n  async getStage(currPrice) {\r\n    console.log(currPrice);\r\n    let configModel = think.model(\"config\", null, \"api\");\r\n    let configStage = await configModel.get(\"auction.bid_increasment\");\r\n    let res = configStage.filter((i)=>i[0] <= currPrice).sort((i, j)=>i[0] < j[0])[0][1];\r\n    return res;\r\n  }\r\n\r\n  //check and change item status\r\n  async checkStatus() {\r\n    let currentTime = new Date().getTime();\r\n    let bidModel = think.model(\"bid\", null, \"api\");\r\n    let orderModel = think.model(\"order\", null, \"api\");\r\n    let itemModel = think.model(\"item\", null, \"api\");\r\n    let messageModel = think.model(\"message\", null, \"api\");\r\n    let userModel = think.model(\"user\", null, \"api\");\r\n\r\n    console.log('----------------------start----------------------');\r\n\r\n    let items_end = await this.where({\r\n      auctionEndTime: {\"<\": currentTime},\r\n      status: [\"NOTIN\", [this.AUCTION_FAILED, this.AUCTION_ENDED]]\r\n    }).select();\r\n\r\n    console.log('----------------------items_end----------------------');\r\n    \r\n    for (let i of items_end) {\r\n      let boolBid = await bidModel.where({item: i[\"id\"]}).count();\r\n      if (boolBid == 0 || think.isEmpty(i[\"currentBidder\"])) {\r\n        await this.where({id: i[\"id\"]}).update({status: this.AUCTION_FAILED});\r\n      }\r\n      else {\r\n        // #comment：用事务处理出错\r\n        // try{\r\n        //   await this.startTrans();\r\n        await this.where({id: i[\"id\"]}).update({status: this.AUCTION_ENDED});\r\n        await orderModel.addOne(i[\"currentBidder\"], i[\"id\"]);\r\n        //更新bid 状态\r\n        await bidModel.where({item: i[\"id\"], value: i[\"currentPrice\"]}).update({status: bidModel.WINNING});\r\n        await bidModel.where({item: i[\"id\"], value: [\"!=\", i[\"currentPrice\"]]}).update({status: bidModel.FAILING});\r\n        //发送成功和失败的系统消息\r\n        await messageModel.sendSystemMessage([{\r\n          from: userModel.systemUser,\r\n          to: i[\"currentBidder\"],\r\n          title: \"系统消息\",\r\n          content: \"您的商品\" + i[\"name\"] + bidModel.STATUS[0],\r\n          read: 0\r\n        }]);\r\n        let userIds = bidModel.where({\r\n          item: i[\"id\"],\r\n          status: bidModel.FAILING,\r\n          user: {\"!=\": i[\"currentBidder\"]}\r\n        }).distinct(\"id\").select();\r\n        let messages = userIds.map((u)=> {\r\n          return {\r\n            from: userModel.systemUser,\r\n            to: u.user,\r\n            title: \"系统消息\",\r\n            content: \"您的商品\" + i[\"name\"] + bidModel.STATUS[1],\r\n            read: 0\r\n          }\r\n        });\r\n        await messageModel.sendSystemMessage(messages);\r\n        //   await this.commit();\r\n        // }catch(e){\r\n        //   await this.rollback();\r\n        // }\r\n      }\r\n    }\r\n\r\n    console.log('----------------------for----------------------');\r\n\r\n    let items_auctioning = await  itemModel.where({\r\n      auctionBeginTime: {\"<\": currentTime},\r\n      auctionEndTime: {\">\": currentTime},\r\n      status: [\"NOTIN\", [this.AUCTIONING]]\r\n    }).select();\r\n    console.log('----------------------items_auctioning----------------------');\r\n    for (let i of items_auctioning) {\r\n      await itemModel.where({id: i[\"id\"]}).update({status: this.AUCTIONING})\r\n    }\r\n    console.log('----------------------return----------------------');\r\n    return true; //返回值有问题。\r\n  }\r\n\r\n  setCheckStatusTimer(time) {\r\n    console.log('-----------------------set-----------------timer----------------------');\r\n    setTimeout(()=> {\r\n      console.log('----------------------------------------timer----------------------');\r\n      this.checkStatus().then();\r\n    }, time);\r\n  }\r\n\r\n  async initCheckStatusTimer() {\r\n    let now = +new Date();\r\n    let items = await this.where({\r\n      status: [\"NOTIN\", [this.AUCTION_FAILED, this.AUCTION_ENDED]]\r\n    }).select();\r\n    for (let i in items) {\r\n      if (i.auctionBeginTime > now) {\r\n        this.setCheckStatusTimer(i.auctionBeginTime - now);\r\n        this.setCheckStatusTimer(i.auctionEndTime - now);\r\n      } else if (i.auctionEndTime > now) {\r\n        this.setCheckStatusTimer(i.auctionEndTime - now);\r\n      }\r\n    }\r\n  }\r\n\r\n  getListAdmin() {\r\n    return this.order(\"item.createAt DESC\")\r\n      .select();\r\n  }\r\n}"]}