{"version":3,"sources":["../../../src/api/model/role.js"],"names":[],"mappings":"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","file":"role.js","sourcesContent":["import Base from './base'\r\n\r\nexport default class Role extends Base {\r\n\r\n  // schemas = {\r\n  //   name: {\r\n  //     required: true,\r\n  //     default: '',\r\n  //     unique: true\r\n  //   },\r\n  //   desc: {\r\n  //     required: true,\r\n  //     default: ''\r\n  //   },\r\n  //   //继承那些角色的权限\r\n  //   extend: {\r\n  //     //ref to collection Role.name\r\n  //     type: [String],\r\n  //     required: true,\r\n  //     default: []\r\n  //   },\r\n  //   authorities: {\r\n  //     default: [],\r\n  //     type: [ObjectID]\r\n  //   },\r\n  //   createAt: {\r\n  //     type: Date,\r\n  //     required: true,\r\n  //     default: ()=>new Date()\r\n  //   },\r\n  //   updateAt: {\r\n  //     type: Date,\r\n  //     required: true,\r\n  //     default: ()=>new Date()\r\n  //   }\r\n  // };\r\n\r\n  // indexeses={\r\n  //   name:{$unique: 1}\r\n  // };\r\n  \r\n  /**\r\n   *\r\n   * @param name\r\n   * @param desc\r\n   * @param extend {[String]}\r\n   * @param authorities {[String]} authority name list\r\n   * @returns {*} true if success, otherwise err string\r\n   */\r\n  async addRole(name, desc = '', extend = ['anonymous', 'registered'], authorities = []) {\r\n\r\n    let roleAuthorityModel=think.model('role_authority',null,'api');\r\n\r\n    extend=JSON.stringify(extend);\r\n    let result = await this.thenAdd({name, desc, extend}, {name});\r\n\r\n    if (result.type == 'add') {\r\n      await roleAuthorityModel.addRoleAuthorities(name,...authorities);\r\n      return true;\r\n    } else {\r\n      return 'ROLE_ALREADY_EXIST';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO: del other role's extend\r\n   * TODO: del user's role, if none, should assign to what\r\n   * @param name {String}\r\n   * @returns {Promise}\r\n   */\r\n  delRole(name) {\r\n    return this.where({name}).delete();\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param name {String} name of role\r\n   * @param authorities {String} authorities' name\r\n   * @returns {Promise}\r\n   */\r\n  rmAuthorities(name, ...authorities) {\r\n\r\n    let role = this.where({name}).find();\r\n    for (let authority of authorities) {\r\n      let index = role.authorities.indexOf(authority);\r\n      if (index >= 0) {\r\n        role.authorities.slice(index, 1);\r\n      }\r\n    }\r\n    return this.where({name}).update({authorities});\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param name {String}\r\n   * @param newName {String}\r\n   * @returns {Promise}\r\n   */\r\n  changeName(name, newName) {\r\n    return this.where({name}).update({name: newName});\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param name {String}\r\n   * @param desc {desc}\r\n   * @returns {Promise}\r\n   */\r\n  changeDesc(name, desc) {\r\n    return this.where({name}).update({desc});\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param name {String} name of role\r\n   * @returns {Promise<[Authority]>} authority's array\r\n   */\r\n  async getRoleAuthorities(name) {\r\n    let authorityModel = think.model('authority', null, 'api');\r\n\r\n    let getAuthorities = async(name)=> {\r\n      let role = await this.where({name}).find();\r\n      if (think.isEmpty(role)) {\r\n        return [];\r\n      }\r\n      let authorities = [];\r\n      for (let e of JSON.parse(role.extend)) {\r\n        authorities.push(await getAuthorities(e));\r\n      }\r\n      let roleAuthorityModel = think.model('role_authority', null, 'api');\r\n      authorities.push(await roleAuthorityModel.where({role: role.id}).find());\r\n      return authorities;\r\n    };\r\n\r\n    return getAuthorities(name);\r\n  };\r\n}"]}