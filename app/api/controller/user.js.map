{"version":3,"sources":["../../../src/api/controller/user.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;IACqB,I;;;;;;;;iBAGnB,I,mBAAc;AAAA;;AAAA,sCAAN,IAAM;AAAN,UAAM;AAAA;;AACZ,4CAAM,IAAN,iDAAc,IAAd;AACA,SAAK,SAAL,GAAiB,KAAK,KAAL,CAAW,MAAX,CAAjB;AACA,SAAK,YAAL,GAAkB,KAAK,KAAL,CAAW,SAAX,CAAlB;AACD,G;AACD;;;iBACM,W;;;;;;;;qBACa,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;;mBACA,MAAM,OAAN,CAAc,IAAd,C;;;;;+CACK,KAAK,IAAL,CAAU,KAAV,EAAiB,EAAjB,C;;;;qBAEc,KAAK,SAAL,CACpB,KADoB,CACd,EAAC,IAAI,KAAK,EAAV,EADc,EACC,IADD,E;;;AAAnB,wB;4BAGS,K;4BAAa,I;4BAAM,U;;qBACX,KAAK,SAAL,CAAe,cAAf,CAA8B,KAAK,EAAnC,C;;;;;qBACE,KAAK,SAAL,CAAe,gBAAf,CAAgC,KAAK,EAArC,C;;;;;AADrB,2B;AACA,6B;;AAFF,wB,eAAmB,M;+CAIZ,KAAK,OAAL,CAAa,UAAb,C;;;;;;;;;;;;;;;;;iBAGH,Y;;;;;;;AACA,sB,GAAW,KAAK,KAAL,CAAW,UAAX,C;AACX,sB,GAAW,KAAK,KAAL,CAAW,UAAX,C;AACX,mB,GAAQ,KAAK,KAAL,CAAW,OAAX,C;;qBAEO,KAAK,SAAL,CAAe,UAAf,CAA0B,QAA1B,EAAoC,QAApC,EAA8C,KAA9C,C;;;AAAf,oB;;mBAEA,MAAM,QAAN,CAAe,MAAf,C;;;;;gDACK,KAAK,IAAL,CAAU,MAAV,C;;;AAEP;AACI,qB,GAAU,CAAC,EAAC,MAAK,KAAK,SAAL,CAAe,UAArB,EAAiC,IAAG,OAAO,EAA3C,EAA+C,OAAM,cAArD,EAAqE,SAAQ,oCAA7E,EAAmH,MAAK,CAAxH,EAAD,C;;qBACR,KAAK,YAAL,CAAkB,iBAAlB,CAAoC,OAApC,C;;;6BAEC,I;;qBAAmB,KAAK,MAAL,CAAY,MAAZ,C;;;;6DAAd,O;;;;;;;;;;;;;;;;;iBAIV,W;;;;;;;AACA,sB,GAAW,KAAK,KAAL,CAAW,UAAX,C;AACX,sB,GAAW,KAAK,KAAL,CAAW,UAAX,C;;qBAEI,KAAK,SAAL,CAAe,SAAf,CAAyB,QAAzB,EAAmC,QAAnC,C;;;AAAf,oB;;mBAGA,MAAM,QAAN,CAAe,MAAf,C;;;;;gDACK,KAAK,IAAL,CAAU,MAAV,C;;;6BAIF,I;;qBAAmB,KAAK,MAAL,CAAY,MAAZ,C;;;;6DAAd,O;;;;;;;;;;;;;;;;;iBAIR,Y;;;;;;;qBAEE,KAAK,OAAL,E;;;gDACC,KAAK,OAAL,CAAa,EAAb,C;;;;;;;;;;;;;;;;;iBAGH,M;6FAAO,I;;;;;AACX,qBAAO,KAAK,QAAZ;;qBACM,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,C;;;gDAEC,KAAK,WAAL,E;;;;;;;;;;;;;;;;;iBAGH,c;;;;;;;;qBACa,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;AACA,yB,GAAc,KAAK,KAAL,CAAW,UAAX,C;AACd,yB,GAAc,KAAK,KAAL,CAAW,UAAX,C;;AAClB,sBAAQ,GAAR,CAAY,WAAZ,EAAyB,GAAzB,EAA8B,WAA9B;;;qBAEyB,KAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,UAAzB,EAAqC,KAArC,CAA2C,EAAC,IAAI,KAAK,IAAL,CAAL,EAA3C,EAA6D,IAA7D,E;;;AAArB,0B;;oBACA,eAAe,aAAa,UAAb,C;;;;;;qBACD,KAAK,KAAL,CAAW,MAAX,EAAmB,KAAnB,CAAyB,EAAC,IAAI,KAAK,IAAL,CAAL,EAAzB,EAA2C,MAA3C,CAAkD,EAAC,UAAU,WAAX,EAAlD,C;;;AAAZ,iB;;kBACC,MAAM,OAAN,CAAc,GAAd,C;;;;;gDACI,KAAK,OAAL,CAAa,MAAb,C;;;gDACF,KAAK,IAAL,CAAU,MAAV,C;;;gDAEF,KAAK,IAAL,CAAU,gBAAV,C;;;;;;;;;;;;;;;;;iBAIH,U;;;;;;;;qBACa,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;AACA,oB,GAAS,KAAK,IAAL,C;;AAEb;;;qBAC2B,KAAK,KAAL,CAAW,SAAX,EAAsB,OAAtB,CAA8B,MAA9B,C;;;AAAvB,4B;;qBAEwB,KAAK,aAAL,CAAmB,MAAnB,C;;;AAAxB,6B;;qBAEuB,KAAK,KAAL,CAAW,OAAX,EAAoB,mBAApB,CAAwC,MAAxC,C;;;AAAvB,4B;AACA,kC,GAAuB,eAAe,GAAf,CAAmB,UAAC,CAAD,EAAO;AACnD,uBAAO,EAAC,QAAQ,EAAE,MAAF,CAAT,EAAoB,MAAM,EAAE,IAAF,CAA1B,EAAmC,SAAS,EAAE,cAAF,CAA5C,EAAP;AACD,eAF0B,C;AAG3B;;;qBACoB,KAAK,KAAL,CAAW,OAAX,EAAoB,UAApB,CAA+B,MAA/B,C;;;AAAhB,qB;AACA,2B,GAAgB,QAAQ,GAAR,CAAY,UAAC,CAAD,EAAO;AACrC,uBAAO,EAAC,QAAQ,EAAE,MAAF,CAAT,EAAoB,MAAM,EAAE,IAAF,CAA1B,EAAmC,SAAS,EAAE,cAAF,CAA5C,EAAP;AACD,eAFmB,C;AAIhB,oB,GAAS;AACX,4BAAY,cADD;AAEX,6BAAa,eAFF;AAGX,kCAAkB,oBAHP;AAIX,2BAAW;AAJA,e;AAMb;;AACA,sBAAQ,GAAR,CAAY,MAAZ;gDACO,KAAK,OAAL,CAAa,MAAb,C;;;;;;;;;;;;;;;;;iBAGH,W;;;;;;;;qBACa,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;AACA,oB,GAAS,KAAK,IAAL,C;6BACN,I;;qBAAmB,KAAK,KAAL,CAAW,OAAX,EAAoB,OAApB,CAA4B,MAA5B,C;;;;6DAAd,O;;;;;;;;;;;;;;;;;iBAGR,S;;;;;;;;qBACa,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;AACA,oB,GAAS,KAAK,IAAL,C;;qBACI,KAAK,KAAL,CAAW,KAAX,EAAkB,OAAlB,CAA0B,MAA1B,C;;;AAAb,kB;gDAIG,KAAK,OAAL,CAAa,IAAb,C;;;;;;;;;;;;;;;;;AAGT;;;iBACM,Y;;;;;;;;qBACa,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;;AACJ,sBAAQ,GAAR,CAAY,IAAZ;AACI,oB,GAAS,KAAK,IAAL,C;;qBACU,KAAK,KAAL,CAAW,QAAX,EAAqB,YAArB,CAAkC,MAAlC,C;;;AAAnB,wB;iDACG,KAAK,OAAL,CAAa,UAAb,C;;;;;;;;;;;;;;;;;iBAGH,a;+FAAc,M;;;;;;qBACL,KAAK,KAAL,CAAW,KAAX,EAAkB,YAAlB,CAA+B,MAA/B,C;;;;;;;;;;;;;;;;;;;;;mBApJjB;;;;;kBAIqB,I","file":"user.js","sourcesContent":["/**\n * Created by zl on 16/2/23.\n */\nimport Base from './base';\nexport default class User extends Base {\n  userModel;\n\n  init(...args) {\n    super.init(...args);\n    this.userModel = this.model('user');\n    this.messageModel=this.model('message')\n  }\n  //获取当前用户\n  async indexAction() {\n    let user = await this.session('user');\n    if (think.isEmpty(user))\n      return this.fail(\"未登录\", {});\n\n    let userDetail = await this.userModel\n      .where({id: user.id}).find();\n\n    userDetail = think.extend(user, userDetail, {\n      totalVolume: await this.userModel.getTotalVolume(user.id),\n      totalTurnover: await this.userModel.getTotalTurnover(user.id)\n    });\n    return this.success(userDetail);\n  }\n\n  async signupAction() {\n    let username = this.param('username');\n    let password = this.param('password');\n    let email = this.param('email');\n\n    let result = await this.userModel.createUser(username, password, email);\n\n    if (think.isString(result)) {\n      return this.fail(result);\n    } else {\n      // auto login\n      let message = [{from:this.userModel.systemUser, to:result.id, title:\"欢迎注册，请完善个人资料\", content:\"请至账户设置页，完善个人资料，我们审核通过后，会增加您的个人信用额度\", read:0}];\n      await this.messageModel.sendSystemMessage(message)\n\n      return this.success(await this._login(result));\n    }\n  }\n\n  async loginAction() {\n    let username = this.param('username');\n    let password = this.param('password');\n\n    let result = await this.userModel.checkUser(username, password);\n    // console.log(result);\n\n    if (think.isString(result)) {\n      return this.fail(result)\n    }\n\n    //login success\n    return this.success(await this._login(result));\n\n  }\n\n  async logoutAction() {\n    //clear session\n    await this.session();\n    return this.success({});\n  }\n\n  async _login(user) {\n    delete user.password;\n    await this.session('user', user);\n\n    return this.indexAction();\n  }\n\n  async pwdResetAction() {\n    let user = await this.session('user');\n    let oldPassword = this.param('password');\n    let newPassword = this.param('pwdReset');\n    console.log(oldPassword, ' ', newPassword);\n\n    let truePassword = await this.model(\"user\").field(\"password\").where({id: user['id']}).find();\n    if (oldPassword == truePassword[\"password\"]) {\n      let res = await this.model(\"user\").where({id: user[\"id\"]}).update({password: newPassword});\n      if (!think.isEmpty(res))\n        return this.success(\"修改成功\");\n      return this.fail(\"修改失败\")\n    }\n    return this.fail(\"PASSWORD_WORRY\");\n  }\n\n\n  async infoAction() {\n    let user = await this.session('user');\n    let userId = user[\"id\"];\n\n    // get messages\n    let resultMessages = await this.model(\"message\").getList(userId);\n    // get bid record with price over mine;\n    let resultPriceOver = await this._getPriceOver(userId);\n    //get successful auction items\n    let auctionConfirm = await this.model(\"order\").getConfirmedAuction(userId);\n    let resultAuctionConfirm = auctionConfirm.map((r) => {\n      return {\"name\": r[\"name\"], \"id\": r[\"id\"], \"price\": r[\"currentPrice\"]}\n    })\n    //git items waiting paying\n    let waitPay = await this.model(\"order\").getWaitPay(userId);\n    let resultWaitPay = waitPay.map((w) => {\n      return {\"name\": w[\"name\"], \"id\": w[\"id\"], \"price\": w[\"currentPrice\"]}\n    });\n\n    let result = {\n      \"messages\": resultMessages,\n      \"priceOver\": resultPriceOver,\n      \"auctionConfirm\": resultAuctionConfirm,\n      \"waitPay\": resultWaitPay\n    };\n    //\n    console.log(result);\n    return this.success(result);\n  }\n\n  async orderAction() {\n    let user = await this.session(\"user\");\n    let userId = user[\"id\"];\n    return this.success(await this.model(\"order\").getList(userId));\n  }\n\n  async bidAction() {\n    let user = await this.session(\"user\");\n    let userId = user[\"id\"];\n    let bids = await this.model(\"bid\").getList(userId);\n    // for (let b of bids) {\n    //   b[\"bidStatus\"] = await this.model(\"bid\").getStatus(b[\"id\"]);\n    // }\n    return this.success(bids);\n  }\n\n  //get following items\n  async followAction(){\n    let user = await this.session(\"user\");\n    console.log(user);\n    let userId = user[\"id\"];\n    let followings = await this.model(\"follow\").getFollowing(userId);\n    return this.success(followings); \n  }\n\n  async _getPriceOver(userId) {\n    return await this.model(\"bid\").getPriceOver(userId);\n\n    // let items = await this.model(\"bid\").getDistinctList(userId);\n\n    // let myMaxBids = [];\n    // let sql = \"select * from bid where item = %d and user=%d and value =(select max(value) from bid where item = %d and user=%d)\"\n    // for (let i of items) {\n    //   let parsedSql = this.model(\"bid\").parseSql(sql, i[\"item\"], userId, i[\"item\"], userId);\n    //   myMaxBids.push((await this.model(\"bid\").query(parsedSql))[0]);\n    // }\n    // console.log(myMaxBids);\n    // let resultPriceOver = [];\n    // for (let m of myMaxBids) {\n    //   let r = await this.model(\"bid\").getPriceOver(m[\"item\"], m[\"value\"]);\n    //   if (!think.isEmpty(r))\n    //     resultPriceOver.push(r);\n    // }\n    // return resultPriceOver;\n  }\n}"]}