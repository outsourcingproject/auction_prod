{"version":3,"sources":["../../../src/api/controller/user.js"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["/**\r\n * Created by zl on 16/2/23.\r\n */\r\nimport Base from './base';\r\nexport default class User extends Base {\r\n  userModel;\r\n\r\n  init(...args) {\r\n    super.init(...args);\r\n    this.userModel = this.model('user');\r\n  }\r\n  //获取当前用户\r\n  async indexAction() {\r\n    let user = await this.session('user');\r\n    if (think.isEmpty(user))\r\n      return this.fail(\"未登录\", {});\r\n\r\n    let userDetail = await this.userModel\r\n      .field(\"desc,level,creditLines,lastLogin\")\r\n      .where({id: user.id}).find();\r\n\r\n    userDetail = think.extend(user, userDetail, {\r\n      totalVolume: await this.userModel.getTotalVolume(user.id),\r\n      totalTurnover: await this.userModel.getTotalTurnover(user.id)\r\n    });\r\n\r\n    return this.success(userDetail);\r\n\r\n  }\r\n\r\n  async signupAction() {\r\n    let username = this.param('username');\r\n    let password = this.param('password');\r\n    let email = this.param('email');\r\n\r\n    let result = await this.userModel.createUser(username, password, email);\r\n\r\n    if (think.isString(result)) {\r\n      return this.fail(result);\r\n    } else {\r\n      // auto login\r\n      return this.success(await this._login(result));\r\n    }\r\n  }\r\n\r\n  async loginAction() {\r\n    let username = this.param('username');\r\n    let password = this.param('password');\r\n\r\n    let result = await this.userModel.checkUser(username, password);\r\n    // console.log(result);\r\n\r\n    if (think.isString(result)) {\r\n      return this.fail(result)\r\n    }\r\n\r\n    //login success\r\n    return this.success(await this._login(result));\r\n\r\n  }\r\n\r\n  async logoutAction() {\r\n    //clear session\r\n    await this.session();\r\n    return this.success({});\r\n  }\r\n\r\n  async _login(user) {\r\n    delete user.password;\r\n    await this.session('user', user);\r\n\r\n    return this.indexAction();\r\n  }\r\n\r\n  async pwdResetAction() {\r\n    let user = await this.session('user');\r\n    let oldPassword = this.param('password');\r\n    let newPassword = this.param('pwdReset');\r\n    console.log(oldPassword, ' ', newPassword);\r\n\r\n    let truePassword = await this.model(\"user\").field(\"password\").where({id: user['id']}).find();\r\n    if (oldPassword == truePassword[\"password\"]) {\r\n      let res = await this.model(\"user\").where({id: user[\"id\"]}).update({password: newPassword});\r\n      if (!think.isEmpty(res))\r\n        return this.success(\"修改成功\");\r\n      return this.fail(\"修改失败\")\r\n    }\r\n    return this.fail(\"PASSWORD_WORRY\");\r\n  }\r\n\r\n\r\n  async infoAction() {\r\n    let user = await this.session('user');\r\n    let userId = user[\"id\"];\r\n\r\n    // get messages\r\n    let resultMessages = await this.model(\"message\").getList(userId);\r\n    // get bid record with price over mine;\r\n    let resultPriceOver = await this._getPriceOver(userId);\r\n    //get successful auction items\r\n    let auctionConfirm = await this.model(\"order\").getConfirmedAuction(userId);\r\n    let resultAuctionConfirm = auctionConfirm.map((r) => {\r\n      return {\"name\": r[\"name\"], \"id\": r[\"id\"], \"price\": r[\"currentPrice\"]}\r\n    })\r\n    //git items waiting paying\r\n    let waitPay = await this.model(\"order\").getWaitPay(userId);\r\n    let resultWaitPay = waitPay.map((w) => {\r\n      return {\"name\": w[\"name\"], \"id\": w[\"id\"], \"price\": w[\"currentPrice\"]}\r\n    });\r\n\r\n    let result = {\r\n      \"messages\": resultMessages,\r\n      \"priceOver\": resultPriceOver,\r\n      \"auctionConfirm\": resultAuctionConfirm,\r\n      \"waitPay\": resultWaitPay\r\n    };\r\n    //\r\n    console.log(result);\r\n    return this.success(result);\r\n  }\r\n\r\n  async orderAction() {\r\n    let user = await this.session(\"user\");\r\n    let userId = user[\"id\"];\r\n    return this.success(await this.model(\"order\").getList(userId));\r\n  }\r\n\r\n  async bidAction() {\r\n    let user = await this.session(\"user\");\r\n    let userId = user[\"id\"];\r\n    let bids = await this.model(\"bid\").getList(userId);\r\n    for (let b of bids) {\r\n      b[\"bidStatus\"] = await this.model(\"bid\").getStatus(b[\"id\"]);\r\n    }\r\n    return this.success(bids);\r\n  }\r\n\r\n  //get following items\r\n  async followAction(){\r\n    let user = await this.session(\"user\");\r\n    console.log(user);\r\n    let userId = user[\"id\"];\r\n    let followings = await this.model(\"follow\").getFollowing(userId);\r\n    return this.success(followings); \r\n  }\r\n\r\n  async _getPriceOver(userId) {\r\n    let items = await this.model(\"bid\").getDistinctList(userId);\r\n\r\n    let myMaxBids = [];\r\n    let sql = \"select * from bid where item = %d and user=%d and value =(select max(value) from bid where item = %d and user=%d)\"\r\n    for (let i of items) {\r\n      let parsedSql = this.model(\"bid\").parseSql(sql, i[\"item\"], userId, i[\"item\"], userId);\r\n      myMaxBids.push((await this.model(\"bid\").query(parsedSql))[0]);\r\n    }\r\n    console.log(myMaxBids);\r\n    let resultPriceOver = [];\r\n    for (let m of myMaxBids) {\r\n      let r = await this.model(\"bid\").getPriceOver(m[\"item\"], m[\"value\"]);\r\n      if (!think.isEmpty(r))\r\n        resultPriceOver.push(r);\r\n    }\r\n    return resultPriceOver;\r\n  }\r\n}"]}