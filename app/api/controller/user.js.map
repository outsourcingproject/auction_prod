{"version":3,"sources":["../../../src/api/controller/user.js"],"names":["User","init","args","userModel","model","indexAction","session","user","think","isEmpty","fail","field","where","id","find","userDetail","getTotalVolume","getTotalTurnover","totalVolume","totalTurnover","extend","success","signupAction","username","param","password","email","createUser","result","isString","_login","loginAction","checkUser","logoutAction","pwdResetAction","oldPassword","newPassword","console","log","truePassword","update","res","infoAction","userId","getList","resultMessages","_getPriceOver","resultPriceOver","getConfirmedAuction","auctionConfirm","resultAuctionConfirm","map","r","getWaitPay","waitPay","resultWaitPay","w","orderAction","bidAction","bids","followAction","getFollowing","followings","getPriceOver"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;IACqBA,I;;;;;;;;iBAGnBC,I,mBAAc;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AACZ,4CAAMD,IAAN,iDAAcC,IAAd;AACA,SAAKC,SAAL,GAAiB,KAAKC,KAAL,CAAW,MAAX,CAAjB;AACD,G;AACD;;;iBACMC,W;;;;;;;;qBACa,KAAKC,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;mBACAC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;+CACK,KAAKG,IAAL,CAAU,KAAV,EAAiB,EAAjB,C;;;;qBAEc,KAAKP,SAAL,CACpBQ,KADoB,CACd,kCADc,EAEpBC,KAFoB,CAEd,EAACC,IAAIN,KAAKM,EAAV,EAFc,EAECC,IAFD,E;;;AAAnBC,wB;4BAISP,K;4BAAaD,I;4BAAMQ,U;;qBACX,KAAKZ,SAAL,CAAea,cAAf,CAA8BT,KAAKM,EAAnC,C;;;;;qBACE,KAAKV,SAAL,CAAec,gBAAf,CAAgCV,KAAKM,EAArC,C;;;;;AADrBK,2B;AACAC,6B;;AAFFJ,wB,eAAmBK,M;+CAIZ,KAAKC,OAAL,CAAaN,UAAb,C;;;;;;;;;;;;;;;;;iBAGHO,Y;;;;;;;AACAC,sB,GAAW,KAAKC,KAAL,CAAW,UAAX,C;AACXC,sB,GAAW,KAAKD,KAAL,CAAW,UAAX,C;AACXE,mB,GAAQ,KAAKF,KAAL,CAAW,OAAX,C;;qBAEO,KAAKrB,SAAL,CAAewB,UAAf,CAA0BJ,QAA1B,EAAoCE,QAApC,EAA8CC,KAA9C,C;;;AAAfE,oB;;mBAEApB,MAAMqB,QAAN,CAAeD,MAAf,C;;;;;gDACK,KAAKlB,IAAL,CAAUkB,MAAV,C;;;6BAGA,I;;qBAAmB,KAAKE,MAAL,CAAYF,MAAZ,C;;;;6DAAdP,O;;;;;;;;;;;;;;;;;iBAIVU,W;;;;;;;AACAR,sB,GAAW,KAAKC,KAAL,CAAW,UAAX,C;AACXC,sB,GAAW,KAAKD,KAAL,CAAW,UAAX,C;;qBAEI,KAAKrB,SAAL,CAAe6B,SAAf,CAAyBT,QAAzB,EAAmCE,QAAnC,C;;;AAAfG,oB;;mBAGApB,MAAMqB,QAAN,CAAeD,MAAf,C;;;;;gDACK,KAAKlB,IAAL,CAAUkB,MAAV,C;;;6BAIF,I;;qBAAmB,KAAKE,MAAL,CAAYF,MAAZ,C;;;;6DAAdP,O;;;;;;;;;;;;;;;;;iBAIRY,Y;;;;;;;qBAEE,KAAK3B,OAAL,E;;;gDACC,KAAKe,OAAL,CAAa,EAAb,C;;;;;;;;;;;;;;;;;iBAGHS,M;6FAAOvB,I;;;;;AACX,qBAAOA,KAAKkB,QAAZ;;qBACM,KAAKnB,OAAL,CAAa,MAAb,EAAqBC,IAArB,C;;;gDAEC,KAAKF,WAAL,E;;;;;;;;;;;;;;;;;iBAGH6B,c;;;;;;;;qBACa,KAAK5B,OAAL,CAAa,MAAb,C;;;AAAbC,kB;AACA4B,yB,GAAc,KAAKX,KAAL,CAAW,UAAX,C;AACdY,yB,GAAc,KAAKZ,KAAL,CAAW,UAAX,C;;AAClBa,sBAAQC,GAAR,CAAYH,WAAZ,EAAyB,GAAzB,EAA8BC,WAA9B;;;qBAEyB,KAAKhC,KAAL,CAAW,MAAX,EAAmBO,KAAnB,CAAyB,UAAzB,EAAqCC,KAArC,CAA2C,EAACC,IAAIN,KAAK,IAAL,CAAL,EAA3C,EAA6DO,IAA7D,E;;;AAArByB,0B;;oBACAJ,eAAeI,aAAa,UAAb,C;;;;;;qBACD,KAAKnC,KAAL,CAAW,MAAX,EAAmBQ,KAAnB,CAAyB,EAACC,IAAIN,KAAK,IAAL,CAAL,EAAzB,EAA2CiC,MAA3C,CAAkD,EAACf,UAAUW,WAAX,EAAlD,C;;;AAAZK,iB;;kBACCjC,MAAMC,OAAN,CAAcgC,GAAd,C;;;;;gDACI,KAAKpB,OAAL,CAAa,MAAb,C;;;gDACF,KAAKX,IAAL,CAAU,MAAV,C;;;gDAEF,KAAKA,IAAL,CAAU,gBAAV,C;;;;;;;;;;;;;;;;;iBAIHgC,U;;;;;;;;qBACa,KAAKpC,OAAL,CAAa,MAAb,C;;;AAAbC,kB;AACAoC,oB,GAASpC,KAAK,IAAL,C;;AAEb;;;qBAC2B,KAAKH,KAAL,CAAW,SAAX,EAAsBwC,OAAtB,CAA8BD,MAA9B,C;;;AAAvBE,4B;;qBAEwB,KAAKC,aAAL,CAAmBH,MAAnB,C;;;AAAxBI,6B;;qBAEuB,KAAK3C,KAAL,CAAW,OAAX,EAAoB4C,mBAApB,CAAwCL,MAAxC,C;;;AAAvBM,4B;AACAC,kC,GAAuBD,eAAeE,GAAf,CAAmB,UAACC,CAAD,EAAO;AACnD,uBAAO,EAAC,QAAQA,EAAE,MAAF,CAAT,EAAoB,MAAMA,EAAE,IAAF,CAA1B,EAAmC,SAASA,EAAE,cAAF,CAA5C,EAAP;AACD,eAF0B,C;AAG3B;;;qBACoB,KAAKhD,KAAL,CAAW,OAAX,EAAoBiD,UAApB,CAA+BV,MAA/B,C;;;AAAhBW,qB;AACAC,2B,GAAgBD,QAAQH,GAAR,CAAY,UAACK,CAAD,EAAO;AACrC,uBAAO,EAAC,QAAQA,EAAE,MAAF,CAAT,EAAoB,MAAMA,EAAE,IAAF,CAA1B,EAAmC,SAASA,EAAE,cAAF,CAA5C,EAAP;AACD,eAFmB,C;AAIhB5B,oB,GAAS;AACX,4BAAYiB,cADD;AAEX,6BAAaE,eAFF;AAGX,kCAAkBG,oBAHP;AAIX,2BAAWK;AAJA,e;AAMb;;AACAlB,sBAAQC,GAAR,CAAYV,MAAZ;gDACO,KAAKP,OAAL,CAAaO,MAAb,C;;;;;;;;;;;;;;;;;iBAGH6B,W;;;;;;;;qBACa,KAAKnD,OAAL,CAAa,MAAb,C;;;AAAbC,kB;AACAoC,oB,GAASpC,KAAK,IAAL,C;6BACN,I;;qBAAmB,KAAKH,KAAL,CAAW,OAAX,EAAoBwC,OAApB,CAA4BD,MAA5B,C;;;;6DAAdtB,O;;;;;;;;;;;;;;;;;iBAGRqC,S;;;;;;;;qBACa,KAAKpD,OAAL,CAAa,MAAb,C;;;AAAbC,kB;AACAoC,oB,GAASpC,KAAK,IAAL,C;;qBACI,KAAKH,KAAL,CAAW,KAAX,EAAkBwC,OAAlB,CAA0BD,MAA1B,C;;;AAAbgB,kB;gDAIG,KAAKtC,OAAL,CAAasC,IAAb,C;;;;;;;;;;;;;;;;;AAGT;;;iBACMC,Y;;;;;;;;qBACa,KAAKtD,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;AACJ8B,sBAAQC,GAAR,CAAY/B,IAAZ;AACIoC,oB,GAASpC,KAAK,IAAL,C;;qBACU,KAAKH,KAAL,CAAW,QAAX,EAAqByD,YAArB,CAAkClB,MAAlC,C;;;AAAnBmB,wB;iDACG,KAAKzC,OAAL,CAAayC,UAAb,C;;;;;;;;;;;;;;;;;iBAGHhB,a;+FAAcH,M;;;;;;qBACL,KAAKvC,KAAL,CAAW,KAAX,EAAkB2D,YAAlB,CAA+BpB,MAA/B,C;;;;;;;;;;;;;;;;;;;;;mBAjJjB;;;;;kBAIqB3C,I","file":"user.js","sourcesContent":["/**\r\n * Created by zl on 16/2/23.\r\n */\r\nimport Base from './base';\r\nexport default class User extends Base {\r\n  userModel;\r\n\r\n  init(...args) {\r\n    super.init(...args);\r\n    this.userModel = this.model('user');\r\n  }\r\n  //获取当前用户\r\n  async indexAction() {\r\n    let user = await this.session('user');\r\n    if (think.isEmpty(user))\r\n      return this.fail(\"未登录\", {});\r\n\r\n    let userDetail = await this.userModel\r\n      .field(\"desc,level,creditLines,lastLogin\")\r\n      .where({id: user.id}).find();\r\n\r\n    userDetail = think.extend(user, userDetail, {\r\n      totalVolume: await this.userModel.getTotalVolume(user.id),\r\n      totalTurnover: await this.userModel.getTotalTurnover(user.id)\r\n    });\r\n    return this.success(userDetail);\r\n  }\r\n\r\n  async signupAction() {\r\n    let username = this.param('username');\r\n    let password = this.param('password');\r\n    let email = this.param('email');\r\n\r\n    let result = await this.userModel.createUser(username, password, email);\r\n\r\n    if (think.isString(result)) {\r\n      return this.fail(result);\r\n    } else {\r\n      // auto login\r\n      return this.success(await this._login(result));\r\n    }\r\n  }\r\n\r\n  async loginAction() {\r\n    let username = this.param('username');\r\n    let password = this.param('password');\r\n\r\n    let result = await this.userModel.checkUser(username, password);\r\n    // console.log(result);\r\n\r\n    if (think.isString(result)) {\r\n      return this.fail(result)\r\n    }\r\n\r\n    //login success\r\n    return this.success(await this._login(result));\r\n\r\n  }\r\n\r\n  async logoutAction() {\r\n    //clear session\r\n    await this.session();\r\n    return this.success({});\r\n  }\r\n\r\n  async _login(user) {\r\n    delete user.password;\r\n    await this.session('user', user);\r\n\r\n    return this.indexAction();\r\n  }\r\n\r\n  async pwdResetAction() {\r\n    let user = await this.session('user');\r\n    let oldPassword = this.param('password');\r\n    let newPassword = this.param('pwdReset');\r\n    console.log(oldPassword, ' ', newPassword);\r\n\r\n    let truePassword = await this.model(\"user\").field(\"password\").where({id: user['id']}).find();\r\n    if (oldPassword == truePassword[\"password\"]) {\r\n      let res = await this.model(\"user\").where({id: user[\"id\"]}).update({password: newPassword});\r\n      if (!think.isEmpty(res))\r\n        return this.success(\"修改成功\");\r\n      return this.fail(\"修改失败\")\r\n    }\r\n    return this.fail(\"PASSWORD_WORRY\");\r\n  }\r\n\r\n\r\n  async infoAction() {\r\n    let user = await this.session('user');\r\n    let userId = user[\"id\"];\r\n\r\n    // get messages\r\n    let resultMessages = await this.model(\"message\").getList(userId);\r\n    // get bid record with price over mine;\r\n    let resultPriceOver = await this._getPriceOver(userId);\r\n    //get successful auction items\r\n    let auctionConfirm = await this.model(\"order\").getConfirmedAuction(userId);\r\n    let resultAuctionConfirm = auctionConfirm.map((r) => {\r\n      return {\"name\": r[\"name\"], \"id\": r[\"id\"], \"price\": r[\"currentPrice\"]}\r\n    })\r\n    //git items waiting paying\r\n    let waitPay = await this.model(\"order\").getWaitPay(userId);\r\n    let resultWaitPay = waitPay.map((w) => {\r\n      return {\"name\": w[\"name\"], \"id\": w[\"id\"], \"price\": w[\"currentPrice\"]}\r\n    });\r\n\r\n    let result = {\r\n      \"messages\": resultMessages,\r\n      \"priceOver\": resultPriceOver,\r\n      \"auctionConfirm\": resultAuctionConfirm,\r\n      \"waitPay\": resultWaitPay\r\n    };\r\n    //\r\n    console.log(result);\r\n    return this.success(result);\r\n  }\r\n\r\n  async orderAction() {\r\n    let user = await this.session(\"user\");\r\n    let userId = user[\"id\"];\r\n    return this.success(await this.model(\"order\").getList(userId));\r\n  }\r\n\r\n  async bidAction() {\r\n    let user = await this.session(\"user\");\r\n    let userId = user[\"id\"];\r\n    let bids = await this.model(\"bid\").getList(userId);\r\n    // for (let b of bids) {\r\n    //   b[\"bidStatus\"] = await this.model(\"bid\").getStatus(b[\"id\"]);\r\n    // }\r\n    return this.success(bids);\r\n  }\r\n\r\n  //get following items\r\n  async followAction(){\r\n    let user = await this.session(\"user\");\r\n    console.log(user);\r\n    let userId = user[\"id\"];\r\n    let followings = await this.model(\"follow\").getFollowing(userId);\r\n    return this.success(followings); \r\n  }\r\n\r\n  async _getPriceOver(userId) {\r\n    return await this.model(\"bid\").getPriceOver(userId);\r\n\r\n    // let items = await this.model(\"bid\").getDistinctList(userId);\r\n\r\n    // let myMaxBids = [];\r\n    // let sql = \"select * from bid where item = %d and user=%d and value =(select max(value) from bid where item = %d and user=%d)\"\r\n    // for (let i of items) {\r\n    //   let parsedSql = this.model(\"bid\").parseSql(sql, i[\"item\"], userId, i[\"item\"], userId);\r\n    //   myMaxBids.push((await this.model(\"bid\").query(parsedSql))[0]);\r\n    // }\r\n    // console.log(myMaxBids);\r\n    // let resultPriceOver = [];\r\n    // for (let m of myMaxBids) {\r\n    //   let r = await this.model(\"bid\").getPriceOver(m[\"item\"], m[\"value\"]);\r\n    //   if (!think.isEmpty(r))\r\n    //     resultPriceOver.push(r);\r\n    // }\r\n    // return resultPriceOver;\r\n  }\r\n}"]}