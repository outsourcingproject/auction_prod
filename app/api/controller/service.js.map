{"version":3,"sources":["../../../src/api/controller/service.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB,O;;;;;;;;oBAEb,Y;;;;;;;AACA,qB,GAAU,KAAK,KAAL,CAAW,SAAX,C;AACV,qB,GAAU,MAAM,OAAN,CAAc,SAAd,CAAwB,OAAxB,EAAiC;AAC7C,wBAAQ,IADqC;AAE7C,kCAAkB;AAF2B,eAAjC,C;AAIV,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;;qBACK,UAAU,MAAV,E;;;AAAjB,sB;AACA,oB,GAAS,SACV,GADU,CACN,UAAC,IAAD,EAAS;AACZ,oBAAI,YAAY,CAAhB;AACA,oBAAI,cAAc,CAAlB;;AAEA,qCAAc,OAAd,2HAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,sBAAd,CAAc;;AACrB,+BAAa,CAAC,KAAK,IAAL,IAAa,EAAd,EAAkB,KAAlB,CAAwB,CAAxB,EAA2B,MAA3B,GAAoC,CAAjD;AACA,iCAAe,CAAC,KAAK,IAAL,IAAa,EAAd,EAAkB,KAAlB,CAAwB,CAAxB,EAA2B,MAA3B,GAAoC,CAAnD;AACD;AACD,qBAAK,SAAL,GAAiB,YAAY,CAAZ,GAAgB,WAAjC;AACA,uBAAO,IAAP;AACD,eAXU,EAYV,MAZU,CAYH,UAAC,CAAD;AAAA,uBAAK,EAAE,SAAP;AAAA,eAZG,EAaV,IAbU,CAaL,UAAC,CAAD,EAAI,CAAJ;AAAA,uBAAQ,EAAE,SAAF,GAAc,EAAE,SAAhB,IAA6B,EAAE,QAAF,CAAW,OAAX,KAAuB,EAAE,QAAF,CAAW,OAAX,EAA5D;AAAA,eAbK,C;+CAcN,KAAK,OAAL,CAAa,MAAb,C;;;;;;;;;;;;;;;;;oBAGH,U;;;;;;;;qBACE,KAAK,OAAL,CAAa,MAAb,EAAoB,EAAC,MAAK,IAAN,EAApB,C;;;AACF,oB,GAAO,MAAM,KAAN,CAAY,QAAZ,EAAqB,IAArB,EAA0B,KAA1B,C;;qBACL,OAAO,GAAP,CAAW,yBAAX,EAAqC,CAAC,EAAC,KAAI,EAAL,EAAD,EAAU,EAAC,QAAO,GAAR,EAAV,EAAuB,EAAC,QAAO,GAAR,EAAvB,CAArC,C;;;6BAEC,I;;qBAAgB,KAAK,OAAL,CAAa,MAAb,C;;;;6DAAX,I;;;;;;;;;;;;;;;;;;;;kBAhCK,O","file":"service.js","sourcesContent":["import Base from './base';\r\nimport path from 'path';\r\n\r\nexport default class Service extends Base {\r\n\r\n  async searchAction() {\r\n    let keyword = this.param('keyword');\r\n    let segment = think.segment.doSegment(keyword, {\r\n      simple: true,\r\n      stripPunctuation: true\r\n    });\r\n    let itemModel = think.model('item', null, 'api');\r\n    let allItems = await itemModel.select();\r\n    let result = allItems\r\n      .map((item)=> {\r\n        let titleHint = 0;\r\n        let contentHint = 0;\r\n\r\n        for (let i of segment) {\r\n          titleHint += (item.name || '').split(i).length - 1;\r\n          contentHint += (item.desc || '').split(i).length - 1;\r\n        }\r\n        item.hintTimes = titleHint * 2 + contentHint;\r\n        return item;\r\n      })\r\n      .filter((i)=>i.hintTimes)\r\n      .sort((x, y)=>y.hintTimes - x.hintTimes || y.createAt.valueOf() - x.createAt.valueOf());\r\n    return this.success(result);\r\n  }\r\n\r\n  async testAction() {\r\n    await this.session('test',{test:'ok'});\r\n    let config=think.model('config',null,'api');\r\n    await config.set('auction.bid_increasment',[{'0':50},{'1000':100},{'5000':200}]);\r\n\r\n    return this.json(await this.session('test'));\r\n  }\r\n}"]}