{"version":3,"sources":["../../../src/api/controller/service.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB,O;;;;;;;;oBAEb,Y;;;;;;;AACA,qB,GAAU,KAAK,KAAL,CAAW,SAAX,C;AACV,qB,GAAU,MAAM,OAAN,CAAc,SAAd,CAAwB,OAAxB,EAAiC;AAC7C,wBAAQ,IADqC;AAE7C,kCAAkB;AAF2B,eAAjC,C;AAIV,uB,GAAY,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,C;;qBACK,UAClB,IADkB,CACb,uCADa,EAElB,KAFkB,CAEZ,sIAFY,EAGlB,MAHkB,E;;;AAAjB,sB;AAIA,oB,GAAS,SACV,GADU,CACN,UAAC,IAAD,EAAS;AACZ,oBAAI,YAAY,CAAhB;AACA,oBAAI,cAAc,CAAlB;;AAEA,qCAAc,OAAd,2HAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,sBAAd,CAAc;;AACrB,+BAAa,CAAC,KAAK,IAAL,IAAa,EAAd,EAAkB,KAAlB,CAAwB,CAAxB,EAA2B,MAA3B,GAAoC,CAAjD;AACA,iCAAe,CAAC,KAAK,IAAL,IAAa,EAAd,EAAkB,KAAlB,CAAwB,CAAxB,EAA2B,MAA3B,GAAoC,CAAnD;AACD;AACD,qBAAK,SAAL,GAAiB,YAAY,CAAZ,GAAgB,WAAjC;AACA,uBAAO,IAAP;AACD,eAXU,EAYV,MAZU,CAYH,UAAC,CAAD;AAAA,uBAAK,EAAE,SAAP;AAAA,eAZG,EAaV,IAbU,CAaL,UAAC,CAAD,EAAI,CAAJ;AAAA,uBAAQ,EAAE,SAAF,GAAc,EAAE,SAAhB,IAA6B,CAAC,EAAE,QAAH,GAAc,CAAC,EAAE,QAAtD;AAAA,eAbK,C;+CAcN,KAAK,OAAL,CAAa,MAAb,C;;;;;;;;;;;;;;;;;oBAGH,U;;;;;;;;qBACE,KAAK,OAAL,CAAa,MAAb,EAAqB,EAAC,MAAM,IAAP,EAArB,C;;;AACF,oB,GAAS,MAAM,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,KAA5B,C;;qBACP,OAAO,GAAP,CAAW,yBAAX,EAAsC,CAAC,EAAC,KAAK,EAAN,EAAD,EAAY,EAAC,QAAQ,GAAT,EAAZ,EAA2B,EAAC,QAAQ,GAAT,EAA3B,CAAtC,C;;;6BAEC,I;;qBAAgB,KAAK,OAAL,CAAa,MAAb,C;;;;6DAAX,I;;;;;;;;;;;;;;;;;;;;kBAnCK,O","file":"service.js","sourcesContent":["import Base from './base';\nimport path from 'path';\n\nexport default class Service extends Base {\n\n  async searchAction() {\n    let keyword = this.param('keyword');\n    let segment = think.segment.doSegment(keyword, {\n      simple: true,\n      stripPunctuation: true\n    });\n    let itemModel = think.model('item', null, 'api');\n    let allItems = await itemModel\n      .join(\"item_type on item.type = item_type.id\")\n      .field(\"item.id as id, currentPrice, item.name as name, followCount, auctionEndTime, image, item_type.name as type,item.createAt as createAt\")\n      .select();\n    let result = allItems\n      .map((item)=> {\n        let titleHint = 0;\n        let contentHint = 0;\n\n        for (let i of segment) {\n          titleHint += (item.name || '').split(i).length - 1;\n          contentHint += (item.desc || '').split(i).length - 1;\n        }\n        item.hintTimes = titleHint * 2 + contentHint;\n        return item;\n      })\n      .filter((i)=>i.hintTimes)\n      .sort((x, y)=>y.hintTimes - x.hintTimes || +y.createAt - +x.createAt);\n    return this.success(result);\n  }\n\n  async testAction() {\n    await this.session('test', {test: 'ok'});\n    let config = think.model('config', null, 'api');\n    await config.set('auction.bid_increasment', [{'0': 50}, {'1000': 100}, {'5000': 200}]);\n\n    return this.json(await this.session('test'));\n  }\n}"]}