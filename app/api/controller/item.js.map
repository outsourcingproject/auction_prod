{"version":3,"sources":["../../../src/api/controller/item.js"],"names":["init","args","itemModel","model","auctioningAction","setRelation","join","where","status","AUCTIONING","field","select","items","session","user","think","isEmpty","followingItems","itemIds","map","f","i","indexOf","success","auctionedAction","AUCTION_ENDED","AUCTION_FAILED","auctionNotStartAction","AUCTION_NOT_STARTED","getBidAction","itemId","param","getItemBids","res","bidAction","now","Date","config","fail","userId","value","itemid","addOne","item","LEADING","console","log","id","update","currentBidder","find","auctionType","time","get","auctionEndTime","setCheckStatusTimer","need_delay_time","auto_delay_time","getStage","newStage","newPrice","followAction","state","add","delete","groupAction","groupId","selectData","group","data","detailAction","_detailHelper","resItemInfo","_relatedItemHelper","resRelatedItems","_followingHelper","r","itemInfo","limit","relatedItems","rDetail","push","imageIds","JSON","parse","count","beginPrice","currentPrice","isFollowing"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;AAGE;;;;mBAIAA,I,mBAAc;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AACZ,4CAAMD,IAAN,iDAAcC,IAAd;AACA,SAAKC,SAAL,GAAiB,KAAKC,KAAL,CAAW,MAAX,CAAjB;AACD,G;;mBAEKC,gB;;;;;;;;;AACAF,uB,GAAY,KAAKC,KAAL,CAAW,MAAX,C;;qBACE,KAAKA,KAAL,CAAW,MAAX,EACfE,WADe,CACH,KADG,EAEfC,IAFe,CAEV,0CAFU,EAGfA,IAHe,CAGV,uCAHU,EAIfC,KAJe,CAIT,EAAEC,QAAQN,UAAUO,UAApB,EAJS,EAKfF,KALe,CAKT,uBALS,EAMfG,KANe,CAMT,iHANS,EAOfC,MAPe,E;;;AAAdC,mB;;qBAQa,KAAKC,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;kBACCC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;;;;;;;;+BACwB,OAAKX,KAAL,CAAW,QAAX,EAAqBO,KAArB,CAA2B,MAA3B,EAAmCH,KAAnC,CAAyC,EAAEO,MAAMA,KAAK,IAAL,CAAR,EAAzC,EAA+DH,MAA/D,E;;;AAAvBM,sC;AACAC,+B,GAAUD,eAAeE,GAAf,CAAmB,UAACC,CAAD;AAAA,iCAAOA,EAAE,MAAF,CAAP;AAAA,yBAAnB,C;;AACdR,8BAAMO,GAAN,CAAU,UAACE,CAAD,EAAO;AACf,iCAAQH,QAAQI,OAAR,CAAgBD,EAAE,IAAF,CAAhB,MAA6B,CAAC,CAA/B,GAAoCA,EAAE,WAAF,IAAiB,IAArD,GAA4DA,EAAE,WAAF,IAAiB,KAApF;AACD,yBAFD;;;;;;;;;;;;;;;AAIAT,oBAAMO,GAAN,CAAU,UAACE,CAAD,EAAO;AACf,uBAAOA,EAAE,WAAF,IAAiB,IAAxB;AACD,eAFD;;;gDAIK,KAAKE,OAAL,CAAaX,KAAb,C;;;;;;;;;;;;;;;;;mBAGHY,e;;;;;;;;;AACAtB,uB,GAAY,KAAKC,KAAL,CAAW,MAAX,C;;qBACE,KAAKA,KAAL,CAAW,MAAX,EACfE,WADe,CACH,KADG,EAEfC,IAFe,CAEV,0CAFU,EAGfA,IAHe,CAGV,uCAHU,EAIfC,KAJe,CAIT,EAAEC,QAAQ,CAACN,UAAUuB,aAAX,EAA0BvB,UAAUwB,cAApC,CAAV,EAJS,EAKfnB,KALe,CAKT,uBALS,EAMfG,KANe,CAMT,iHANS,EAOfC,MAPe,E;;;AAAdC,mB;;qBAQa,KAAKC,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;kBACCC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;;;;;;;;+BACwB,OAAKX,KAAL,CAAW,QAAX,EAAqBO,KAArB,CAA2B,MAA3B,EAAmCH,KAAnC,CAAyC,EAAEO,MAAMA,KAAK,IAAL,CAAR,EAAzC,EAA+DH,MAA/D,E;;;AAAvBM,sC;AACAC,+B,GAAUD,eAAeE,GAAf,CAAmB,UAACC,CAAD;AAAA,iCAAOA,EAAE,MAAF,CAAP;AAAA,yBAAnB,C;;AACdR,8BAAMO,GAAN,CAAU,UAACE,CAAD,EAAO;AACf,iCAAQH,QAAQI,OAAR,CAAgBD,EAAE,IAAF,CAAhB,MAA6B,CAAC,CAA/B,GAAoCA,EAAE,WAAF,IAAiB,IAArD,GAA4DA,EAAE,WAAF,IAAiB,KAApF;AACD,yBAFD;;;;;;;;;;;;;;;AAIAT,oBAAMO,GAAN,CAAU,UAACE,CAAD,EAAO;AACf,uBAAOA,EAAE,WAAF,IAAiB,IAAxB;AACD,eAFD;;;gDAIK,KAAKE,OAAL,CAAaX,KAAb,C;;;;;;;;;;;;;;;;;mBAGHe,qB;;;;;;;;;AACAzB,uB,GAAY,KAAKC,KAAL,CAAW,MAAX,C;;qBACE,KAAKA,KAAL,CAAW,MAAX,EACfE,WADe,CACH,KADG,EAEfC,IAFe,CAEV,0CAFU,EAGfA,IAHe,CAGV,uCAHU,EAIfC,KAJe,CAIT,EAAEC,QAAQN,UAAU0B,mBAApB,EAJS,EAKfrB,KALe,CAKT,uBALS,EAMfG,KANe,CAMT,iHANS,EAOfC,MAPe,E;;;AAAdC,mB;;qBAQa,KAAKC,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;kBACCC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;;;;;;;;+BACwB,OAAKX,KAAL,CAAW,QAAX,EAAqBO,KAArB,CAA2B,MAA3B,EAAmCH,KAAnC,CAAyC,EAAEO,MAAMA,KAAK,IAAL,CAAR,EAAzC,EAA+DH,MAA/D,E;;;AAAvBM,sC;AACAC,+B,GAAUD,eAAeE,GAAf,CAAmB,UAACC,CAAD;AAAA,iCAAOA,EAAE,MAAF,CAAP;AAAA,yBAAnB,C;;AACdR,8BAAMO,GAAN,CAAU,UAACE,CAAD,EAAO;AACf,iCAAQH,QAAQI,OAAR,CAAgBD,EAAE,IAAF,CAAhB,MAA6B,CAAC,CAA/B,GAAoCA,EAAE,WAAF,IAAiB,IAArD,GAA4DA,EAAE,WAAF,IAAiB,KAApF;AACD,yBAFD;;;;;;;;;;;;;;;AAIAT,oBAAMO,GAAN,CAAU,UAACE,CAAD,EAAO;AACf,uBAAOA,EAAE,WAAF,IAAiB,IAAxB;AACD,eAFD;;;gDAIK,KAAKE,OAAL,CAAaX,KAAb,C;;;;;;;;;;;;;;;;;AAIT;;;mBACMiB,Y;;;;;;;AACAC,oB,GAAS,KAAKC,KAAL,CAAW,IAAX,C;;qBACG,KAAK5B,KAAL,CAAW,KAAX,EAAkB6B,WAAlB,CAA8BF,MAA9B,C;;;AAAZG,iB;gDACG,KAAKV,OAAL,CAAaU,GAAb,C;;;;;;;;;;;;;;;;;AAGT;AACA;;;mBACMC,S;;;;;;;AACAC,iB,GAAM,CAAC,IAAIC,IAAJ,E;AAEPC,oB,GAAStB,MAAMZ,KAAN,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,KAA5B,C;;qBAEI,KAAKU,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;mBACAC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;gDACK,KAAKwB,IAAL,E;;;AACLC,oB,GAASzB,KAAK,IAAL,C;AACT0B,mB,GAAQ,KAAKT,KAAL,CAAW,cAAX,C;AACRU,oB,GAAS,KAAKV,KAAL,CAAW,QAAX,C;;qBACG,KAAK5B,KAAL,CAAW,KAAX,EAAkBuC,MAAlB,CAAyB;AACvC5B,sBAAMyB,MADiC;AAEvCI,sBAAMF,MAFiC;AAGvCD,uBAAOA,KAHgC;AAIvChC,wBAAQ,KAAKL,KAAL,CAAW,KAAX,EAAkByC;AAJa,eAAzB,C;;;AAAZX,iB;;AAMJY,sBAAQC,GAAR,CAAY,qCAAZ;AACAD,sBAAQC,GAAR,CAAYhC,IAAZ;;qBACM,KAAKX,KAAL,CAAW,MAAX,EAAmBI,KAAnB,CAAyB,EAAEwC,IAAIN,MAAN,EAAzB,EAAyCO,MAAzC,CAAgD;AACpDC,+BAAeV;AADqC,eAAhD,C;;;;qBAKW,KAAKpC,KAAL,CAAW,MAAX,EAAmBE,WAAnB,CAA+B,KAA/B,EAAsCE,KAAtC,CAA4C,EAAEwC,IAAIN,MAAN,EAA5C,EAA4DS,IAA5D,E;;;AAAbP,kB;;oBAIAA,KAAKQ,WAAL,IAAoB,C;;;;;AAClBC,kB,GAAOf,OAAOgB,GAAP,CAAW,yBAAX,C;;oBAEPV,KAAKW,cAAL,GAAsBnB,MAAMiB,I;;;;;AAC9BT,mBAAKW,cAAL,GAAsBnB,MAAMiB,IAA5B;;qBACM,KAAKjD,KAAL,CAAW,MAAX,EAAmBI,KAAnB,CAAyB,EAAEwC,IAAIN,MAAN,EAAzB,EAAyCO,MAAzC,CAAgD;AACpDM,gCAAgBX,KAAKW;AAD+B,eAAhD,C;;;AAGN,mBAAKnD,KAAL,CAAW,MAAX,EAAmBoD,mBAAnB,CAAuCZ,KAAKW,cAAL,GAAsBnB,GAA7D;;;;;;;oBAIKQ,KAAKQ,WAAL,IAAoB,C;;;;;AACvBK,6B,GAAkBnB,OAAOgB,GAAP,CAAW,kCAAX,C;AAClBI,6B,GAAkBpB,OAAOgB,GAAP,CAAW,kCAAX,C;;oBAClBlB,MAAMqB,eAAN,GAAwBb,KAAKW,c;;;;;AAC/BX,mBAAKW,cAAL,IAAuBG,eAAvB;;qBACM,KAAKtD,KAAL,CAAW,MAAX,EAAmBI,KAAnB,CAAyB,EAAEwC,IAAIN,MAAN,EAAzB,EAAyCO,MAAzC,CAAgD;AACpDM,gCAAgBX,KAAKW;AAD+B,eAAhD,C;;;AAGN,mBAAKnD,KAAL,CAAW,MAAX,EAAmBoD,mBAAnB,CAAuCZ,KAAKW,cAAL,GAAsBnB,GAA7D;;;;qBAGiB,KAAKhC,KAAL,CAAW,MAAX,EAAmBuD,QAAnB,CAA4Bf,KAAK,cAAL,CAA5B,C;;;AAAjBgB,sB;gDACG,KAAKpC,OAAL,CAAa,EAAEwB,IAAId,GAAN,EAAW2B,UAAUjB,KAAK,cAAL,CAArB,EAA2CgB,UAAUA,QAArD,EAAb,C;;;;;;;;;;;;;;;;;mBAGHE,Y;;;;;;;;qBACa,KAAKhD,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;mBACAC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;gDACK,KAAKwB,IAAL,E;;;AACLC,oB,GAASzB,KAAKiC,E;AACdjB,oB,GAAS,KAAKC,KAAL,CAAW,QAAX,C;AACT+B,mB,GAAQ,KAAK/B,KAAL,CAAW,OAAX,C;;mBACR+B,K;;;;;6BACK,I;;qBAAmB,KAAK3D,KAAL,CAAW,QAAX,EAAqB4D,GAArB,CAAyB,EAAEjD,MAAMyB,MAAR,EAAgBI,MAAMb,MAAtB,EAAzB,C;;;;6DAAdP,O;;;6BAEL,I;;qBAAmB,KAAKpB,KAAL,CAAW,QAAX,EAAqBI,KAArB,CAA2B,EAAEO,MAAMyB,MAAR,EAAgBI,MAAMb,MAAtB,EAA3B,EAA2DkC,MAA3D,E;;;;6DAAdzC,O;;;;;;;;;;;;;;;;;mBAGV0C,W;;;;;;;AACAC,qB,GAAU,KAAKnC,KAAL,CAAW,IAAX,C;;qBACI,KAAK5B,KAAL,CAAW,YAAX,EAAyBgE,UAAzB,CAAoCD,OAApC,C;;;AAAdE,mB;;qBACa,KAAKjE,KAAL,CAAW,MAAX,EACdE,WADc,CACF,KADE,EAEdC,IAFc,CAET,0CAFS,EAGdA,IAHc,CAGT,uCAHS,EAIdC,KAJc,CAIR,EAAE,iBAAiB2D,OAAnB,EAJQ,EAKd3D,KALc,CAKR,uBALQ,EAMdG,KANc,CAMR,iHANQ,EAOdC,MAPc,E;;;AAAb0D,kB;iDAQG,KAAK9C,OAAL,CAAa,EAAE6C,YAAF,EAASxD,OAAOyD,IAAhB,EAAb,C;;;;;;;;;;;;;;;;;mBAGHC,Y;;;;;;;;AACAxC,oB,GAAS,KAAKC,KAAL,CAAW,IAAX,C,EAAkB;;;qBACP,KAAKwC,aAAL,CAAmBzC,MAAnB,C;;;AAApB0C,yB;;qBACwB,KAAKC,kBAAL,CAAwB3C,MAAxB,C;;;AAAxB4C,6B;;qBACa,KAAK7D,OAAL,CAAa,MAAb,C;;;AAAbC,kB;;kBACCC,MAAMC,OAAN,CAAcF,IAAd,C;;;;;AACCyB,oB,GAASzB,KAAK,IAAL,C;;qBACoB,KAAK6D,gBAAL,CAAsBpC,MAAtB,EAA8BT,MAA9B,C;;;AAAjC0C,0BAAY,WAAZ,C;0BACcE,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAALE,e;;qBACgB,KAAKD,gBAAL,CAAsBpC,MAAtB,EAA8BqC,EAAE,IAAF,CAA9B,C;;;AAAvBA,gBAAE,WAAF,C;;;;;;;;;;;AAEFJ,0BAAY,WAAZ,IAA2B,IAA3B;2BACcE,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAALE,gB;;AACPA,iBAAE,WAAF,IAAiB,IAAjB;;;;;;;AAEJJ,0BAAY,cAAZ,IAA8BE,eAA9B;iDACO,KAAKnD,OAAL,CAAaiD,WAAb,C;;;;;;;;;;;;;;;;;mBAGHC,kB;+FAAmB1B,E,EAAIR,M;;;;;;;;qBACN,KAAKrC,SAAL,CAAeG,WAAf,CAA2B,KAA3B,EAAkCE,KAAlC,CAAwC,EAAE,MAAMwC,EAAR,EAAxC,EAAsDG,IAAtD,E;;;AAAjB2B,sB;;qBACqB,KAAK3E,SAAL,CAAeG,WAAf,CAA2B,KAA3B,EAAkCE,KAAlC,CAAwC,EAAE,SAASsE,SAAS,OAAT,CAAX,EAAxC,EAAwEnE,KAAxE,CAA8E,IAA9E,EAAoFoE,KAApF,CAA0F,EAA1F,EAA8FnE,MAA9F,E;;;AAArBoE,0B;AACA9C,iB,GAAM,E;2BACI8C,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAALH,e;;qBACa,KAAKL,aAAL,CAAmBK,EAAE,IAAF,CAAnB,EAA4BrC,MAA5B,C;;;AAAhByC,qB;;AACJ/C,kBAAIgD,IAAJ,CAASD,OAAT;;;;;;;iDAEK/C,G;;;;;;;;;;;;;;;;;mBAIHsC,a;+FAAcxB,E;;;;;;;qBACG,KAAK7C,SAAL,CAAeG,WAAf,CAA2B,KAA3B,EAAkCE,KAAlC,CAAwC,EAAE,MAAMwC,EAAR,EAAxC,EAAsDG,IAAtD,E;;;AAAjB2B,sB;AACAK,sB,GAAWC,KAAKC,KAAL,CAAWP,SAAS,OAAT,CAAX,C;;qBACc,KAAK1E,KAAL,CAAW,KAAX,EAAkBI,KAAlB,CAAwB,EAAE,QAAQwC,EAAV,EAAxB,EAAwCsC,KAAxC,E;;;AAA7BR,uBAAS,UAAT,C;;qBACgC,KAAK1E,KAAL,CAAW,QAAX,EAAqBI,KAArB,CAA2B,EAAE,QAAQwC,EAAV,EAA3B,EAA2CsC,KAA3C,E;;;AAAhCR,uBAAS,aAAT,C;;AACAA,uBAASS,UAAT,GAAsB,CAACT,SAASS,UAAhC;AACAT,uBAASU,YAAT,GAAwB,CAACV,SAASU,YAAlC;;qBAC0B,KAAKpF,KAAL,CAAW,MAAX,EAAmBuD,QAAnB,CAA4BmB,SAAS,cAAT,CAA5B,C;;;AAA1BA,uBAAS,OAAT,C;iDACOA,Q;;;;;;;;;;;;;;;;;mBAGHF,gB;+FAAiBpC,M,EAAQT,M;;;;;;qBAChB,KAAK3B,KAAL,CAAW,QAAX,EAAqBqF,WAArB,CAAiCjD,MAAjC,EAAyCT,MAAzC,C","file":"item.js","sourcesContent":["'use strict';\r\n\r\nimport Base from './base.js';\r\n\r\nexport default class extends Base {\r\n  /**\r\n   * index action\r\n   * @return {Promise} []\r\n   */\r\n  init(...args) {\r\n    super.init(...args);\r\n    this.itemModel = this.model('item');\r\n  }\r\n\r\n  async auctioningAction() {\r\n    let itemModel = this.model(\"item\");\r\n    let items = await this.model(\"item\")\r\n      .setRelation(false)\r\n      .join(\"item_group on item.group = item_group.id\")\r\n      .join(\"item_type on item.type = item_type.id\")\r\n      .where({ status: itemModel.AUCTIONING })\r\n      .where(\"item_group.isOpen = 1\")\r\n      .field(\"item.id as id, currentPrice, item.name as name, followCount, auctionEndTime, item.image, item_type.name as type\")\r\n      .select();\r\n    let user = await this.session(\"user\");\r\n    if (!think.isEmpty(user)) {\r\n      let followingItems = await this.model(\"follow\").field(\"item\").where({ user: user[\"id\"] }).select();\r\n      let itemIds = followingItems.map((f) => f[\"item\"]);\r\n      items.map((i) => {\r\n        return (itemIds.indexOf(i[\"id\"]) !== -1) ? i[\"following\"] = true : i[\"following\"] = false\r\n      });\r\n    } else {\r\n      items.map((i) => {\r\n        return i[\"following\"] = null\r\n      });\r\n    }\r\n    return this.success(items);\r\n  }\r\n\r\n  async auctionedAction() {\r\n    let itemModel = this.model(\"item\");\r\n    let items = await this.model(\"item\")\r\n      .setRelation(false)\r\n      .join(\"item_group on item.group = item_group.id\")\r\n      .join(\"item_type on item.type = item_type.id\")\r\n      .where({ status: [itemModel.AUCTION_ENDED, itemModel.AUCTION_FAILED] })\r\n      .where(\"item_group.isOpen = 1\")\r\n      .field(\"item.id as id, currentPrice, item.name as name, followCount, auctionEndTime, item.image, item_type.name as type\")\r\n      .select();\r\n    let user = await this.session(\"user\");\r\n    if (!think.isEmpty(user)) {\r\n      let followingItems = await this.model(\"follow\").field(\"item\").where({ user: user[\"id\"] }).select();\r\n      let itemIds = followingItems.map((f) => f[\"item\"]);\r\n      items.map((i) => {\r\n        return (itemIds.indexOf(i[\"id\"]) !== -1) ? i[\"following\"] = true : i[\"following\"] = false\r\n      });\r\n    } else {\r\n      items.map((i) => {\r\n        return i[\"following\"] = null\r\n      });\r\n    }\r\n    return this.success(items);\r\n  }\r\n\r\n  async auctionNotStartAction() {\r\n    let itemModel = this.model(\"item\");\r\n    let items = await this.model(\"item\")\r\n      .setRelation(false)\r\n      .join(\"item_group on item.group = item_group.id\")\r\n      .join(\"item_type on item.type = item_type.id\")\r\n      .where({ status: itemModel.AUCTION_NOT_STARTED })\r\n      .where(\"item_group.isOpen = 1\")\r\n      .field(\"item.id as id, currentPrice, item.name as name, followCount, auctionEndTime, item.image, item_type.name as type\")\r\n      .select();\r\n    let user = await this.session(\"user\");\r\n    if (!think.isEmpty(user)) {\r\n      let followingItems = await this.model(\"follow\").field(\"item\").where({ user: user[\"id\"] }).select();\r\n      let itemIds = followingItems.map((f) => f[\"item\"]);\r\n      items.map((i) => {\r\n        return (itemIds.indexOf(i[\"id\"]) !== -1) ? i[\"following\"] = true : i[\"following\"] = false\r\n      });\r\n    } else {\r\n      items.map((i) => {\r\n        return i[\"following\"] = null\r\n      });\r\n    }\r\n    return this.success(items);\r\n\r\n  }\r\n\r\n  //返回某个拍品的所有竞拍记录\r\n  async getBidAction() {\r\n    let itemId = this.param(\"id\");\r\n    let res = await this.model(\"bid\").getItemBids(itemId);\r\n    return this.success(res);\r\n  }\r\n\r\n  //竞拍某样物品\r\n  //传入参数 auctionPrice：竞拍价格，itemId: 竞拍物品；\r\n  async bidAction() {\r\n    let now = +new Date();\r\n\r\n    let config = think.model('config', null, 'api');\r\n\r\n    let user = await this.session(\"user\");\r\n    if (think.isEmpty(user))\r\n      return this.fail();\r\n    let userId = user[\"id\"];\r\n    let value = this.param(\"auctionPrice\");\r\n    let itemid = this.param(\"itemId\");\r\n    let res = await this.model(\"bid\").addOne({\r\n      user: userId,\r\n      item: itemid,\r\n      value: value,\r\n      status: this.model(\"bid\").LEADING\r\n    });\r\n    console.log(\"~~~~~~~~~~~~bidAction~~~~~~~~~~~~~~\")\r\n    console.log(user)\r\n    await this.model(\"item\").where({ id: itemid }).update({\r\n      currentBidder: userId\r\n    });\r\n\r\n    //将新的价格数据返回给前端。\r\n    let item = await this.model(\"item\").setRelation(false).where({ id: itemid }).find();\r\n\r\n\r\n    //时间领先\r\n    if (item.auctionType == 0) {\r\n      let time = config.get('auction.ahead_time.time');\r\n\r\n      if (item.auctionEndTime < now + time) {\r\n        item.auctionEndTime = now + time;\r\n        await this.model(\"item\").where({ id: itemid }).update({\r\n          auctionEndTime: item.auctionEndTime\r\n        });\r\n        this.model(\"item\").setCheckStatusTimer(item.auctionEndTime - now);\r\n      }\r\n    }\r\n    //固定时间\r\n    else if (item.auctionType == 1) {\r\n      let need_delay_time = config.get('auction.fix_time.need_delay_time');\r\n      let auto_delay_time = config.get('auction.fix_time.auto_delay_time');\r\n      if (now + need_delay_time > item.auctionEndTime) {\r\n        item.auctionEndTime += auto_delay_time;\r\n        await this.model(\"item\").where({ id: itemid }).update({\r\n          auctionEndTime: item.auctionEndTime\r\n        });\r\n        this.model(\"item\").setCheckStatusTimer(item.auctionEndTime - now);\r\n      }\r\n    }\r\n    let newStage = await this.model(\"item\").getStage(item[\"currentPrice\"]);\r\n    return this.success({ id: res, newPrice: item[\"currentPrice\"], newStage: newStage });\r\n  }\r\n\r\n  async followAction() {\r\n    let user = await this.session(\"user\");\r\n    if (think.isEmpty(user))\r\n      return this.fail();\r\n    let userId = user.id;\r\n    let itemId = this.param(\"itemId\");\r\n    let state = this.param(\"state\");\r\n    if (state)\r\n      return this.success(await this.model(\"follow\").add({ user: userId, item: itemId }));\r\n    else\r\n      return this.success(await this.model(\"follow\").where({ user: userId, item: itemId }).delete());\r\n  }\r\n\r\n  async groupAction() {\r\n    let groupId = this.param(\"id\");\r\n    let group = await this.model(\"item_group\").selectData(groupId);\r\n    let data = await this.model(\"item\")\r\n      .setRelation(false)\r\n      .join(\"item_group on item.group = item_group.id\")\r\n      .join(\"item_type on item.type = item_type.id\")\r\n      .where({ \"item_group.id\": groupId })\r\n      .where(\"item_group.isOpen = 1\")\r\n      .field(\"item.id as id, currentPrice, item.name as name, followCount, auctionEndTime, item.image, item_type.name as type\")\r\n      .select();\r\n    return this.success({ group, items: data });\r\n  }\r\n\r\n  async detailAction() {\r\n    let itemId = this.param(\"id\"); //获取item id;\r\n    let resItemInfo = await this._detailHelper(itemId);\r\n    let resRelatedItems = await this._relatedItemHelper(itemId);\r\n    let user = await this.session(\"user\");\r\n    if (!think.isEmpty(user)) {\r\n      let userId = user[\"id\"];\r\n      resItemInfo[\"following\"] = await this._followingHelper(userId, itemId);\r\n      for (let r of resRelatedItems)\r\n        r[\"following\"] = await this._followingHelper(userId, r[\"id\"]);\r\n    } else {\r\n      resItemInfo[\"following\"] = null;\r\n      for (let r of resRelatedItems)\r\n        r[\"following\"] = null;\r\n    }\r\n    resItemInfo[\"relatedItems\"] = resRelatedItems;\r\n    return this.success(resItemInfo);\r\n  }\r\n\r\n  async _relatedItemHelper(id, userId) {\r\n    let itemInfo = await this.itemModel.setRelation(false).where({ \"id\": id }).find();\r\n    let relatedItems = await this.itemModel.setRelation(false).where({ \"group\": itemInfo[\"group\"] }).field(\"id\").limit(10).select();\r\n    let res = [];\r\n    for (let r of relatedItems) {\r\n      let rDetail = await this._detailHelper(r[\"id\"], userId);\r\n      res.push(rDetail);\r\n    }\r\n    return res;\r\n\r\n  }\r\n\r\n  async _detailHelper(id) {\r\n    let itemInfo = await this.itemModel.setRelation(false).where({ \"id\": id }).find();\r\n    let imageIds = JSON.parse(itemInfo[\"image\"]);\r\n    itemInfo[\"bidCount\"] = await this.model(\"bid\").where({ \"item\": id }).count();\r\n    itemInfo[\"followCount\"] = await this.model(\"follow\").where({ \"item\": id }).count();\r\n    itemInfo.beginPrice = +itemInfo.beginPrice;\r\n    itemInfo.currentPrice = +itemInfo.currentPrice;\r\n    itemInfo[\"stage\"] = await this.model(\"item\").getStage(itemInfo[\"currentPrice\"]);\r\n    return itemInfo;\r\n  }\r\n\r\n  async _followingHelper(userId, itemId) {\r\n    return await this.model(\"follow\").isFollowing(userId, itemId);\r\n  }\r\n}"]}