{"version":3,"sources":["../../../src/rest/controller/base.js"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["'use strict';\r\n\r\nexport default class Base extends think.controller.rest {\r\n  modelInstance;\r\n  modelPk;\r\n\r\n  needPaging;\r\n  pageCount;\r\n  listOrder;\r\n  filter;\r\n  join;\r\n  field;\r\n\r\n  init(...args) {\r\n    super.init(...args);\r\n    this.modelInstance = null;\r\n    this.modelPk = null;\r\n    this.needPaging = 1;\r\n    this.pageCount = think.config('site.defaultPageCount');\r\n    this.listOrder = {'createAt': 'desc'}\r\n    this.filter = {};\r\n    this.join = '';\r\n    this.field = '';\r\n    //允许rest API使用post访问\r\n    this._method = '_method';\r\n  }\r\n\r\n  //允许跨域访问\r\n  __before() {\r\n    let method = this.http.method.toLowerCase();\r\n    this._setCorsHeader();\r\n    if (method === \"options\") {\r\n      return this.end();\r\n    }\r\n\r\n  }\r\n\r\n  _setCorsHeader() {\r\n    this.header(\"Access-Control-Allow-Origin\", this.header(\"origin\") || \"*\");\r\n    this.header(\"Access-Control-Allow-Headers\", \"Origin, No-Cache, X-Requested-With, If-Modified-Since, Pragma, Last-Modified, Cache-Control, Expires, Content-Type, Set-Cookie,*\");\r\n    this.header(\"Access-Control-Request-Method\", \"GET,POST,PUT,DELETE\");\r\n    this.header(\"Access-Control-Allow-Credentials\", \"true\");\r\n  }\r\n\r\n  async getAction() {\r\n    let data;\r\n    if (this.id) {\r\n      data = await this.modelInstance\r\n        .where({[this.modelPk]: this.id})\r\n        .find();\r\n    } else {\r\n      let filter = this.filter;\r\n      let listOrder = this.param('listOrder');\r\n      let needPaging = +(this.param('needPaging') || this.needPaging);\r\n      let pageNo = +this.param('pageNo') > 0 ? +this.param('pageNo') : 1;\r\n      let pageCount = +(this.param('pageCount') || this.pageCount);\r\n\r\n\r\n      if (listOrder && !think.isEmpty(JSON.parse(listOrder))) {\r\n        listOrder = JSON.parse(listOrder);\r\n      } else {\r\n        listOrder = this.listOrder;\r\n      }\r\n\r\n      if (this.param('filter')) {\r\n        filter = think.extend(filter, JSON.parse(this.param('filter')));\r\n      }\r\n\r\n      let t = this.modelInstance;\r\n      if (this.join) {\r\n        t = t.join(this.join);\r\n      }\r\n      if (this.field) {\r\n        t = t.field(this.field);\r\n      }\r\n      t = t.where(filter)\r\n        .order(listOrder);\r\n\r\n      if (needPaging) {\r\n        t.order(listOrder).page(pageNo, pageCount)\r\n      }\r\n      data = await t.select();\r\n    }\r\n    return this.success(data);\r\n\r\n  }\r\n\r\n  async postAction() {\r\n\r\n    let data = this.post();\r\n    console.log(data);\r\n    delete data[this.modelPk];\r\n    if (think.isEmpty(data)) {\r\n      return this.fail(\"data is empty\");\r\n    }\r\n    let user = await this.session('user');\r\n    if (!think.isEmpty(user)) {\r\n      data.user = user.id;\r\n      data.author = user.id;\r\n      data.publisher = user.id;\r\n    }\r\n\r\n    let insertId = await this.modelInstance.add(data);\r\n    return this.success({id: insertId});\r\n  }\r\n\r\n  async deleteAction() {\r\n\r\n    if (!this.id) {\r\n      return this.fail(\"params error\");\r\n    }\r\n    console.log(this.modelPk, ' delete');\r\n    let rows = await this.modelInstance.where({[this.modelPk]: this.id}).delete();\r\n    return this.success({affectedRows: rows});\r\n  }\r\n\r\n  async putAction() {\r\n\r\n    if (!this.id) {\r\n      return this.fail(\"params error\");\r\n    }\r\n    let data = this.post();\r\n    delete data[this.modelPk];\r\n    if (think.isEmpty(data)) {\r\n      return this.fail(\"data is empty\");\r\n    }\r\n    let rows = await this.modelInstance.where({[this.modelPk]: this.id}).update(data);\r\n    return this.success({affectedRows: rows});\r\n  }\r\n\r\n  /**\r\n   * @param obj the base object\r\n   * @param arr array of Object which desc popular key and collection name. for example:{key:'author',ref:'users'}\r\n   *\r\n   */\r\n  async populate(obj, arr) {\r\n    let model;\r\n    let key;\r\n    for (let i of arr) {\r\n      model = this.model(i.ref);\r\n      key = i.key;\r\n      if (think.isArray(obj[key])) {\r\n        for (let j of obj[key]) {\r\n          obj[key].push(await model.where({'_id': j + ''}).find());\r\n          obj[key].shift();\r\n        }\r\n      } else {\r\n        obj[key] = await model.where({'_id': obj[key] + ''}).find();\r\n      }\r\n\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  async helper() {\r\n\r\n  }\r\n}"]}