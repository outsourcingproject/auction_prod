{"version":3,"sources":["../../../src/rest/controller/item.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqB,I;;;;;;;;iBAEb,Q;;;;;;AACJ,mBAAK,aAAL,GAAqB,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,KAA1B,CAArB;;qBACqB,KAAK,aAAL,CAAmB,KAAnB,E;;;AAArB,mBAAK,O;;AACL,mBAAK,UAAL,GAAkB,KAAlB;AACA,mBAAK,SAAL,GAAiB,EAAC,YAAY,MAAb,EAAjB;;qBACa,gBAAM,QAAN,W;;;;;;;;;;;;;;;;;;;;iBAGT,U;;;;;;;AAEA,kB,GAAO,KAAK,IAAL,E;;AACX,qBAAO,KAAK,KAAK,OAAV,CAAP;;mBACI,MAAM,OAAN,CAAc,IAAd,C;;;;;gDACK,KAAK,IAAL,CAAU,eAAV,C;;;;qBAEQ,KAAK,OAAL,CAAa,MAAb,C;;;AAAb,kB;;AACJ,kBAAI,CAAC,MAAM,OAAN,CAAc,IAAd,CAAL,EAA0B;AACxB,qBAAK,IAAL,GAAY,KAAK,EAAjB;AACA,qBAAK,MAAL,GAAc,KAAK,EAAnB;AACA,qBAAK,SAAL,GAAiB,KAAK,EAAtB;AACD;;;qBAEoB,KAAK,aAAL,CAAmB,GAAnB,CAAuB,IAAvB,C;;;AAAjB,sB;;qBAEE,KAAK,aAAL,CAAmB,WAAnB,E;;;AAEF,iB,GAAM,CAAC,IAAI,IAAJ,E;AACP,kB,GAAO,KAAK,KAAL,E;;;AAEX,kBAAI,KAAK,gBAAL,GAAwB,GAAxB,GAA8B,CAAlC,EACE,KAAK,aAAL,CAAmB,mBAAnB,CAAuC,KAAK,gBAAL,GAAwB,GAA/D;AACF,kBAAI,KAAK,cAAL,GAAsB,GAAtB,GAA4B,CAAhC,EACE,KAAK,aAAL,CAAmB,mBAAnB,CAAuC,KAAK,cAAL,GAAsB,GAA7D;;gDAEK,KAAK,OAAL,CAAa,EAAC,IAAI,QAAL,EAAb,C;;;;;;;;;;;;;;;;;iBAGH,S;;;;;;;;;kBACC,KAAK,E;;;;;gDACD,KAAK,IAAL,CAAU,cAAV,C;;;AAEL,kB,GAAO,KAAK,IAAL,E;;AACX,qBAAO,KAAK,KAAK,OAAV,CAAP;;mBACI,MAAM,OAAN,CAAc,IAAd,C;;;;;gDACK,KAAK,IAAL,CAAU,eAAV,C;;;;qBAEQ,KAAK,aAAL,CAAmB,KAAnB,kDAA2B,KAAK,OAAhC,IAA0C,KAAK,EAA/C,yBAAoD,MAApD,CAA2D,IAA3D,C;;;AAAb,kB;;qBAEE,KAAK,aAAL,CAAmB,WAAnB,E;;;AAEF,iB,GAAM,CAAC,IAAI,IAAJ,E;AACP,kB,GAAO,KAAK,KAAL,E;;;AAEX,kBAAI,KAAK,gBAAL,GAAwB,GAAxB,GAA8B,CAAlC,EACE,KAAK,aAAL,CAAmB,mBAAnB,CAAuC,KAAK,gBAAL,GAAwB,GAA/D;AACF,kBAAI,KAAK,cAAL,GAAsB,GAAtB,GAA4B,CAAhC,EACE,KAAK,aAAL,CAAmB,mBAAnB,CAAuC,KAAK,cAAL,GAAsB,GAA7D;;gDAEK,KAAK,OAAL,CAAa,EAAC,cAAc,IAAf,EAAb,C;;;;;;;;;;;;;;;;;;;;kBA5DU,I","file":"item.js","sourcesContent":["import Base from './base';\n\nexport default class Item extends Base {\n\n  async __before() {\n    this.modelInstance = think.model('item', null, 'api');\n    this.modelPk = await this.modelInstance.getPk();\n    this.needPaging = false;\n    this.listOrder = {'createAt': 'desc'};\n    return await super.__before();\n  }\n\n  async postAction() {\n\n    let data = this.post();\n    delete data[this.modelPk];\n    if (think.isEmpty(data)) {\n      return this.fail(\"data is empty\");\n    }\n    let user = await this.session('user');\n    if (!think.isEmpty(user)) {\n      data.user = user.id;\n      data.author = user.id;\n      data.publisher = user.id;\n    }\n\n    let insertId = await this.modelInstance.add(data);\n\n    await this.modelInstance.checkStatus();\n\n    let now = +new Date();\n    let item = this.param();\n\n    if (item.auctionBeginTime - now > 0)\n      this.modelInstance.setCheckStatusTimer(item.auctionBeginTime - now);\n    if (item.auctionEndTime - now > 0)\n      this.modelInstance.setCheckStatusTimer(item.auctionEndTime - now);\n\n    return this.success({id: insertId});\n  }\n\n  async putAction() {\n    if (!this.id) {\n      return this.fail(\"params error\");\n    }\n    let data = this.post();\n    delete data[this.modelPk];\n    if (think.isEmpty(data)) {\n      return this.fail(\"data is empty\");\n    }\n    let rows = await this.modelInstance.where({[this.modelPk]: this.id}).update(data);\n\n    await this.modelInstance.checkStatus();\n\n    let now = +new Date();\n    let item = this.param();\n\n    if (item.auctionBeginTime - now > 0)\n      this.modelInstance.setCheckStatusTimer(item.auctionBeginTime - now);\n    if (item.auctionEndTime - now > 0)\n      this.modelInstance.setCheckStatusTimer(item.auctionEndTime - now);\n\n    return this.success({affectedRows: rows});\n  }\n}"]}